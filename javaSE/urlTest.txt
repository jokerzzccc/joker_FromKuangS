
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <link rel="canonical" href="https://blog.csdn.net/weixin_41121133/article/details/109628661"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="renderer" content="webkit"/>
    <meta name="force-rendering" content="webkit"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="report" content='{"pid": "blog", "spm":"1001.2101"}'>
    <meta name="referrer" content="always">
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">
    <meta name="applicable-device" content="pc">
    <link  href="https://g.csdnimg.cn/static/logo/favicon32.ico"  rel="shortcut icon" type="image/x-icon" />
    <title>JAVA网络编程_lazydog036的博客-CSDN博客</title>
    <script>
      (function(){ 
        var el = document.createElement("script"); 
        el.src = "https://s3a.pstatp.com/toutiao/push.js?1abfa13dfe74d72d41d83c86d240de427e7cac50c51ead53b2e79d40c7952a23ed7716d05b4a0f683a653eab3e214672511de2457e74e99286eb2c33f4428830"; 
        el.id = "ttzz"; 
        var s = document.getElementsByTagName("script")[0]; 
        s.parentNode.insertBefore(el, s);
      })(window)
    </script>
        <meta name="keywords" content="JAVA网络编程">
        <meta name="csdn-baidu-search"  content='{"autorun":true,"install":true,"keyword":"JAVA网络编程"}'>
    <meta name="description" content="文章目录1. 网络概述1.1 计算机网络2. 网络模型2.1 OSI参考模型2.2 TCP/IP模型3. 通信协议3.1 TCP协议3.2 UDP协议3.3 IP协议3.4 Port端口4. 网络编程4.1 InetAddress类4.2 基于TCP协议的Socket网络编程4.2.1 开发步骤4.2.2 TCP编程案例一4.2.3 案例一分析4.2.4 TCP编程案例二4.2.5 TCP编程案例三4.2.6 TCP变成案例四1. 网络概述什么是网络？由点和线构成，表示诸多对象间的互相联系。在生活">
    <script src='//g.csdnimg.cn/tingyun/1.8.3/blog.js' type='text/javascript'></script>
        <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/release/blogv2/dist/pc/css/detail_enter-ace8742f72.min.css">
    <script type="application/ld+json">{"@context":"https://ziyuan.baidu.com/contexts/cambrian.jsonld","@id":"https://blog.csdn.net/weixin_41121133/article/details/109628661","appid":"1638831770136827","pubDate":"2020-11-11T18:46:16","title":"JAVA网络编程_lazydog036的博客-CSDN博客","upDate":"2020-11-11T18:46:16"}</script>
        <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/release/blogv2/dist/pc/themesSkin/skin3-template/skin3-template-45808e735f.min.css">
    <script src="https://csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var isCorporate = false;//注释删除enterprise
        var username =  "weixin_41121133";
        var skinImg = "white";
        var blog_address = "https://blog.csdn.net/weixin_41121133";
        var currentUserName = "";
        var isOwner = false;
        var loginUrl = "http://passport.csdn.net/account/login?from=https://blog.csdn.net/weixin_41121133/article/details/109628661";
        var blogUrl = "https://blog.csdn.net/";
        var avatar = "https://profile.csdnimg.cn/8/0/A/3_weixin_41121133";
        var articleTitle = "JAVA网络编程";
        var articleDesc = "文章目录1. 网络概述1.1 计算机网络2. 网络模型2.1 OSI参考模型2.2 TCP/IP模型3. 通信协议3.1 TCP协议3.2 UDP协议3.3 IP协议3.4 Port端口4. 网络编程4.1 InetAddress类4.2 基于TCP协议的Socket网络编程4.2.1 开发步骤4.2.2 TCP编程案例一4.2.3 案例一分析4.2.4 TCP编程案例二4.2.5 TCP编程案例三4.2.6 TCP变成案例四1. 网络概述什么是网络？由点和线构成，表示诸多对象间的互相联系。在生活";
        var articleTitles = "JAVA网络编程_lazydog036的博客-CSDN博客";
        var nickName = "lazydog036";
        var articleDetailUrl = "https://blog.csdn.net/weixin_41121133/article/details/109628661";
        if(window.location.host.split('.').length == 3) {
            blog_address = blogUrl + username;
        }
        var skinStatus = "White";
        var blogStaticHost = "https://csdnimg.cn/release/blogv2/"
    </script>
    <script src="https://g.csdnimg.cn/??fixed-sidebar/1.1.6/fixed-sidebar.js" type="text/javascript"></script>
    <script src='//g.csdnimg.cn/common/csdn-report/report.js' type='text/javascript'></script>
    <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/public/sandalstrap/1.4/css/sandalstrap.min.css">
    <style>
        .MathJax, .MathJax_Message, .MathJax_Preview{
            display: none
        }
    </style>
    <script src="https://dup.baidustatic.com/js/ds.js"></script>
</head>
<body class="nodata " style="">
        <script>
            var toolbarSearchExt = {"landingWord":[],"queryWord":"","tag":["网络","java","网络通信","网络协议","socket"],"title":"JAVA网络编程"};
        </script>
    <script src="https://g.csdnimg.cn/common/csdn-toolbar/csdn-toolbar.js" type="text/javascript"></script>
    <script>
    (function(){
        var bp = document.createElement('script');
        var curProtocol = window.location.protocol.split(':')[0];
        if (curProtocol === 'https') {
            bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
        }
        else {
            bp.src = 'http://push.zhanzhang.baidu.com/push.js';
        }
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(bp, s);
    })();
    </script>
<link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/pc/css/blog_code-01256533b5.min.css">
<link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/chart-3456820cac.css" />
<div class="main_father clearfix d-flex justify-content-center" style="height:100%;"> 
    <div class="container clearfix" id="mainBox">
        <main>
<script type="text/javascript">
    var blogSensitiveWords = "";
    function getQueryString(name) {   
      var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象  
      var r = window.location.search.substr(1).match(reg);  //匹配目标参数
      if( r != null ) return decodeURIComponent( r[2] ); return '';   
    }
    function stripscript(s){ 
      var pattern = new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？%]") 
      var rs = ""; 
      for (var i = 0; i < s.length; i++) { 
        rs = rs+s.substr(i, 1).replace(pattern, ''); 
      } 
      return rs; 
    }
    var blogHotWords = stripscript(getQueryString('utm_term')).length > 1 ? stripscript(getQueryString('utm_term')) : ''
</script>
<div class="blog-content-box">
    <div class="article-header-box">
        <div class="article-header">
            <div class="article-title-box">
                <h1 class="title-article" id="articleContentId">JAVA网络编程</h1>
            </div>
            <div class="article-info-box">
                <div class="article-bar-top">
                    <img class="article-type-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/original.png" alt="">
                    <div class="bar-content">
                    <a class="follow-nickName " href="https://blog.csdn.net/weixin_41121133" target="_blank" rel="noopener">lazydog036</a>
                    <span class="time">2020-11-11 18:46:16</span>
                    <img class="article-read-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes.png" alt="">
                    <span class="read-count">111</span>
                    <a id="blog_detail_zk_collection" class="un-collection" data-report-click='{"mod":"popu_823","spm":"1001.2101.3001.4232","ab":"new"}'>
                        <img class="article-collect-img article-heard-img un-collect-status isdefault" style="display:inline-block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect.png" alt="">
                        <img class="article-collect-img article-heard-img collect-status isactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive.png" alt="">
                        <span class="name">收藏</span>
                        <span class="get-collection">
                        </span>
                    </a>
                    </div>
                </div>
                <div class="blog-tags-box">
                    <div class="tags-box artic-tag-box">
                            <span class="label">分类专栏：</span>
                                <a class="tag-link" href="https://blog.csdn.net/weixin_41121133/category_10533897.html" target="_blank" rel="noopener">JAVA</a>
                            <span class="label">文章标签：</span>
                                <a data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"网络","ab":"new"}' class="tag-link" href="https://www.csdn.net/tags/MtzaIgwsNDIwOTMtYmxvZwO0O0OO0O0O.html" target="_blank" rel="noopener">网络</a>
                                <a data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"java","ab":"new"}' class="tag-link" href="https://www.csdn.net/tags/NtTaIg5sMzYyLWJsb2cO0O0O.html" target="_blank" rel="noopener">java</a>
                                <a data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"网络通信","ab":"new"}' class="tag-link" href="https://www.csdn.net/tags/MtTaEg0sMDk4MzItYmxvZwO0O0OO0O0O.html" target="_blank" rel="noopener">网络通信</a>
                                <a data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"网络协议","ab":"new"}' class="tag-link" href="https://www.csdn.net/tags/MtTaEg0sMDk5OTgtYmxvZwO0O0OO0O0O.html" target="_blank" rel="noopener">网络协议</a>
                                <a data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"socket","ab":"new"}' class="tag-link" href="https://www.csdn.net/tags/MtTaEg0sMDg5OTgtYmxvZwO0O0OO0O0O.html" target="_blank" rel="noopener">socket</a>
                    </div>
                </div>
                <div class="up-time"><span>最后发布:2020-11-11 18:46:16</span><span>首次发布:2020-11-11 18:46:16</span></div>
                <div class="slide-content-box">
                    <div class="article-copyright">
                        <div class="creativecommons">
                            版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。
                        </div>
                        <div class="article-source-link">
                            本文链接：<a href="https://blog.csdn.net/weixin_41121133/article/details/109628661" target="_blank">https://blog.csdn.net/weixin_41121133/article/details/109628661</a>
                        </div>
                    </div>
                </div>
                <div class="operating">
                    <a class="href-article-edit slide-toggle">版权</a>
                </div>
            </div>
        </div>
    </div>
    <article class="baidu_pl">
        <div id="article_content" class="article_content clearfix">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css">
                <div id="content_views" class="markdown_views prism-atom-one-dark">
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>
                    </svg>
                    <p></p>
<div class="toc">
 <h3>文章目录</h3>
 <ul><li><a href="#1__1">1. 网络概述</a></li><li><ul><li><a href="#11__7">1.1 计算机网络</a></li></ul>
  </li><li><a href="#2__35">2. 网络模型</a></li><li><ul><li><a href="#21_OSI_37">2.1 OSI参考模型</a></li><li><a href="#22_TCPIP_55">2.2 TCP/IP模型</a></li></ul>
  </li><li><a href="#3__68">3. 通信协议</a></li><li><ul><li><a href="#31_TCP_70">3.1 TCP协议</a></li><li><a href="#32_UDP_82">3.2 UDP协议</a></li><li><a href="#33_IP_89">3.3 IP协议</a></li><li><a href="#34_Port_130">3.4 Port端口</a></li></ul>
  </li><li><a href="#4__159">4. 网络编程</a></li><li><ul><li><a href="#41_InetAddress_161">4.1 InetAddress类</a></li><li><a href="#42_TCPSocket_274">4.2 基于TCP协议的Socket网络编程</a></li><li><ul><li><a href="#421__288">4.2.1 开发步骤</a></li><li><a href="#422_TCP_305">4.2.2 TCP编程案例一</a></li><li><a href="#423__372">4.2.3 案例一分析</a></li><li><a href="#424_TCP_382">4.2.4 TCP编程案例二</a></li><li><a href="#425_TCP_470">4.2.5 TCP编程案例三</a></li><li><a href="#426_TCP_627">4.2.6 TCP变成案例四</a></li></ul>
  </li></ul>
 </li></ul>
</div>
<p></p> 
<h1><a id="1__1"></a>1. 网络概述</h1> 
<ul><li> <p>什么是网络&#xff1f;</p> <p><strong>由点和线构成</strong>&#xff0c;<strong>表示诸多对象间的互相联系</strong>。在生活当中&#xff0c;人际关系是一种网络&#xff0c;足球网是一种网络&#xff0c;蜘蛛网也是一种网络。</p> </li></ul> 
<h2><a id="11__7"></a>1.1 计算机网络</h2> 
<ul><li> <p>什么是计算机网络&#xff1f;</p> <p>为实现资源共享和信息传递&#xff0c;通过通信线路连接起来的若干主机&#xff08;Host&#xff09;。比如多个独立的主机/电脑通过双绞线或者光纤连接起来就形成了计算机网络。</p> </li><li> <p>按照地理范围网络分为&#xff1a;</p> 
  <ul><li> <p>局域网。</p> <p>范围比较小&#xff0c;可能是一间教室&#xff0c;一栋大楼或者一个校区。</p> </li><li> <p>地域网。</p> <p>可以是一个或者多个城市形成的网络。</p> </li><li> <p>广域网。</p> <p>最大的网络&#xff0c;又可以分为&#xff1a;</p> 
    <ul><li>互联网&#xff1a;&#xff08;Internet&#xff09;点与点相连。</li><li>万维网&#xff1a;&#xff08;WWW - World Wide Web&#xff09;端与端相连。</li><li>物联网&#xff1a;&#xff08;IoT - Internet of things&#xff09;物与物相连。</li></ul> </li></ul> </li><li> <p>网络编程&#xff1a;</p> <p>让计算机与计算机之间<strong>建立连接</strong>、<strong>进行通信</strong>。</p> </li></ul> 
<h1><a id="2__35"></a>2. 网络模型</h1> 
<h2><a id="21_OSI_37"></a>2.1 OSI参考模型</h2> 
<ul><li>OSI&#xff08;Open System Interconnection&#xff09;开放式系统互联。</li></ul> 
<img src="https://pic.downk.cc/item/5fa928291cd1bbb86b822e85.png" /> 
<p>这个模型把整个网络的建设分成了七层&#xff0c;下层为上层服务&#xff1a;</p> 
<ul><li>第七层&#xff1a;<strong>应用层</strong>负责文件访问和管理、可靠运输服务、远程操作服务。&#xff08;HTTP、FTP、SMTP&#xff09;</li><li>第六层&#xff1a;<strong>表示层</strong>负责定义转换数据格式及加密&#xff0c;允许选择以二进制或ASCII格式传输。</li><li>第五层&#xff1a;<strong>会话层</strong>负责使应用建立和维持会话&#xff0c;使通信在失效时继续恢复通信。&#xff08;断点续传&#xff09;</li><li>第四层&#xff1a;<strong>传输层</strong>负责是否选择差错恢复协议、数据流重用、错误顺序重排。&#xff08;TCP、UDP&#xff09;</li><li>第三层&#xff1a;<strong>网络层</strong>负责定义了能够标识所有网络结点的逻辑地址。&#xff08;IP地址&#xff09;</li><li>第二层&#xff1a;<strong>链路层</strong>在物理层上&#xff0c;通过规程或者协议&#xff08;差错控制&#xff09;来控制传输数据的正确性。&#xff08;MAC&#xff09;</li><li>第一层&#xff1a;<strong>物理层</strong>为设备之间的数据通信提供信号和物理介质。&#xff08;双绞线、光导纤维&#xff09;</li></ul> 
<p>举个实际例子&#xff0c;假设我在QQ上给我的学妹发了条“我喜欢你”&#xff0c;这条信息会从应用层向下到物理层进行传递&#xff0c;每下一层都会包裹某种协议&#xff0c;最后在物理层转换为数字信号或者光信号等通过网卡或者路由器等传递到学妹端的物理层&#xff0c;这种信号又从物理层往上到应用层&#xff0c;学妹就能看见我发了条信息&#xff0c;学妹也能以这样的方式给我回复消息&#xff0c;有可能是“你是个好人”等其他信息&#xff0c;这是一个双向的传递。在这个过程中&#xff0c;涉及到各层的协议&#xff0c;协议实际就是约定数据传输的格式&#xff0c;我发送了中文&#xff0c;别人也一定看到的是同样的内容。</p> 
<h2><a id="22_TCPIP_55"></a>2.2 TCP/IP模型</h2> 
<ul><li>一组用于实现网络互连的通信协议&#xff0c;将协议分为四个层次。</li></ul> 
<img src="https://pic.downk.cc/item/5fa930371cd1bbb86b83cbf7.png" /> 
<p>由于OSI参考模型采用的是七层的建设模型&#xff0c;比较复杂&#xff0c;所以在网络建设中一般采用的是TCP/IP模型。实际上TCP/IP模型的四层也对应这OSI模型的七层&#xff0c;它将OSI的五到七层合成了应用层&#xff0c;把一二层合成了网络接口层。</p> 
<ul><li>第四层&#xff1a;<strong>应用层</strong>负责传送各种<strong>最终形态的数据</strong>&#xff0c;是直接与用户打交道的层&#xff0c;典型协议是HTTP、FTP等。</li><li>第三层&#xff1a;<strong>传输层</strong>负责传送<strong>文本数据</strong>&#xff0c;主要协议是TCP、UDP协议。</li><li>第二层&#xff1a;<strong>网络层</strong>负责分配地址和传送<strong>二进制数据</strong>&#xff0c;主要协议是IP协议。</li><li>第一层&#xff1a;<strong>接口层</strong>负责<strong>电路连接</strong>&#xff0c;是整个网络的物理基础&#xff0c;典型的协议包括以太网、ADSL等等。</li></ul> 
<h1><a id="3__68"></a>3. 通信协议</h1> 
<h2><a id="31_TCP_70"></a>3.1 TCP协议</h2> 
<ul><li> <p>TCP协议&#xff1a;Transmission Control Protocol 传输控制协议</p> </li><li> <p>是一种<strong>面向连接的</strong>、<strong>可靠的</strong>、<strong>面向字节流</strong>的传输层通信协议。<strong>数据大小无限制</strong>。建立连接的过程需要三次握手&#xff0c;断开连接的过程需要四次挥手。</p> </li><li> <p>面向连接的意思就是两台计算机&#xff08;应用程序&#xff09;在通信之前&#xff0c;必须先建立连接。</p> </li><li> <p>TCP的三次握手&#xff0c;或者说三报文握手&#xff0c;是TCP建立连接过程的机制。主动发起TCP连接的应用进程叫做客户&#xff0c;而被动等待连接建立的应用程序叫做服务器。客户向服务器发送请求后&#xff0c;服务器要确认客户的连接请求&#xff0c;然后客户要对服务器的确认进行确认。</p> </li><li> <p>TCP的四次挥手&#xff0c;或者说四报文握手&#xff0c;是TCP释放连接过程的机制。任何一方都可以在数据传送结束后发出连接释放的通知&#xff0c;待对方确认后就进入了半关闭状态。当另一方也没有数据再发送时&#xff0c;则发送连接释放通知&#xff0c;对方确认后就完全关闭了TCP连接。</p> </li><li> <p>“面向字节流”的含义是&#xff1a;虽然应用程序和TCP的交互试一次一个数据块&#xff08;大小不等&#xff09;&#xff0c;但TCP把应用程序交下来的数据仅仅看成是一连串的<strong>无结构的字节流</strong>。TCP并不知道所传送的字节流的含义。TCP不保证接收方应用程序所收到的数据块和发送方应用程序所发出的数据块具有对应大小的关系&#xff08;例如&#xff0c;发送方应用程序交给发送方的TCP共10个数据块&#xff0c;但接收方的TCP可能只用了4个数据块就把收到的字节流交付给上层的应用程序&#xff09;。但接收方的应用程序收到的字节流必须和发送方应用程序发出的字节流完全一样。</p> </li></ul> 
<h2><a id="32_UDP_82"></a>3.2 UDP协议</h2> 
<ul><li>UDP协议&#xff1a;User Datagram Protocol用户数据报协议</li><li>是一种<strong>无连接</strong>的传输层协议&#xff0c;提供<strong>面向报文</strong>的简单<strong>不可靠</strong>信息传送服务&#xff0c;每个包的大小是64KB。</li><li>无连接是指UDP在传送数据之前<strong>不需要先建立连接</strong>。远地主机的运输层在收到UDP报文后&#xff0c;不需要给出任何确认。虽然UDP不提供可靠交付&#xff0c;但在某些情况下UDP却是一种最有效的工作方式。</li><li>“面向报文”简单说就是应用层交给UDP多长的报文&#xff0c;UDP就照样发送&#xff0c;即一次发送一个报文。也就是说&#xff0c;UDP一次交付一个完整的报文。</li></ul> 
<h2><a id="33_IP_89"></a>3.3 IP协议</h2> 
<p>IP协议&#xff1a;Internet Protocol 互联网协议/网际协议</p> 
<ul><li>负责数据从一台机器发送到另一台机器。</li><li>给互联网每台设备分配一个唯一标识&#xff08;IP地址&#xff09;。</li></ul> 
<p>IP地址分为两种&#xff1a;</p> 
<ul><li> <p>IPV4&#xff1a;4字节32位整数&#xff0c;并分成4段8位的二进制数&#xff0c;每8位之间用圆点隔开&#xff0c;每8位整数可以转换为一个0~255的十进制整数。</p> <p>格式&#xff1a;D.D.D.D 例如&#xff1a;255.255.255.255</p> <p>IPV4是上个世纪70年代出现的一个版本&#xff0c;到现在差不多五十年&#xff0c;所以面临着一个资源耗尽的问题。在上个世纪90年代出现了IP的第6个版本&#xff0c;据说IPV6可以给地球的每一个沙子分配一个IP。</p> </li><li> <p>IPV6&#xff1a;16字节128位整数&#xff0c;并分成8段十六进制数&#xff0c;每16位之间用圆点隔开&#xff0c;每16位整数可以转换为一个0~65535的十进制数。</p> <p>格式&#xff1a;X.X.X.X.X.X.X.X 例如&#xff1a;FFFF.FFFF.FFFF.FFFF.FFFF.FFFF.FFFF.FFFF</p> <p>这里的4和6是IP的第4个和第6个版本&#xff0c;版本1~3和版本5都未曾使用过。</p> </li></ul> 
<p>IPV4的应用分类&#xff1a;</p> 
<ul><li> <p>A类&#xff1a;政府机构&#xff0c;<strong>1</strong>.0.0.1~<strong>126</strong>.255.255.254</p> </li><li> <p>B类&#xff1a;中型企业&#xff0c;<strong>128</strong>.0.0.1~<strong>191</strong>.255.255.254</p> </li><li> <p>C类&#xff1a;个人用户&#xff0c;<strong>192</strong>.0.0.1~<strong>223</strong>.255.255.254</p> </li><li> <p>D类&#xff1a;用于组播&#xff0c;224.0.0.1~239.255.255.254</p> </li><li> <p>E类&#xff1a;用于实验&#xff0c;240.0.0.1~255.255.255.254</p> </li><li> <p>回环地址&#xff1a;127.0.0.1&#xff0c;指本机&#xff0c;一般用于测试使用。</p> </li><li> <p>测试IP命令&#xff1a;ping D.D.D.D</p> <p>比如你可以打开cmd&#xff0c;输入<code>ping www.baidu.com</code></p> </li><li> <p>查看IP命令&#xff1a;ipconfig</p> </li></ul> 
<h2><a id="34_Port_130"></a>3.4 Port端口</h2> 
<ul><li> <p>端口号&#xff1a;在通信实体上进行网络通讯程序的唯一标识。</p> <p>举个例子&#xff0c;我用IP地址为192.168.0.1的电脑上的QQ程序&#xff0c;给学妹的IP地址为192.168.0.2的电脑上的QQ发送一条信息“我喜欢你”&#xff0c;而且我还用电脑上的微信发送了相同的信息给学妹电脑上的微信&#xff0c;那么这两条信息发送的IP地址都是学妹的电脑192.168.0.2&#xff0c;如何保证QQ的消息不会发送到微信上&#xff0c;不至于出现混乱&#xff1f;所以&#xff0c;程序在发送信息的时候&#xff0c;不仅要知道对方的IP地址&#xff0c;还要知道程序的端口号。</p> </li><li> <p>端口分类&#xff08;一般是两个字节&#xff09;&#xff1a;</p> 
  <ul><li> <p>公认端口&#xff1a;0~1023</p> <p>像这样的端口号是被占用的&#xff0c;我们不能使用。</p> </li><li> <p>注册端口&#xff1a;1024~49151</p> </li><li> <p>动态或私有端口&#xff1a;49152~65535</p> <p>像这样的端口号是动态分配的&#xff0c;而且两个网络程序不可能出现端口号相同的情况&#xff0c;但是对于TCP/UDP协议&#xff0c;他们是两套端口号&#xff0c;它们端口号相同是不冲突的&#xff0c;每个协议都是独立的。</p> </li></ul> </li><li> <p>常用端口&#xff1a;</p> 
  <ul><li>MySql:3306</li><li>Oracle:1521</li><li>Tomcat:8080</li><li>SMTP:25</li><li>Web服务器:80</li><li>FTP服务器:21</li></ul> </li></ul> 
<hr /> 
<h1><a id="4__159"></a>4. 网络编程</h1> 
<h2><a id="41_InetAddress_161"></a>4.1 InetAddress类</h2> 
<ul><li> <p>概念&#xff1a;表示互联网协议&#xff08;IP&#xff09;地址对象&#xff0c;<strong>封装</strong>了与该IP地址相关的所有信息&#xff0c;并提供获取信息的常用方法。</p> </li><li> <p>方法&#xff1a;</p> 
  <ul><li> <p><code>public static InetAddress getLocalHost()</code></p> <p>获得本地主机地址对象。</p> </li><li> <p><code>public static InetAddress getByName(String host)</code></p> <p>根据主机名称获得地址。</p> </li><li> <p><code>public static InetAddress[] getAllByName(String host)</code></p> <p>获得所有相关地址对象。</p> </li><li> <p><code>public String getHostAddress()</code></p> <p>获取IP地址字符串</p> </li><li> <p><code>public String getHostName()</code></p> <p>获得IP地址主机名。</p> </li></ul> </li></ul> 
<p>演示InetAddress类的使用&#xff1a;</p> 
<ol><li> <p>创建本机IP地址对象。</p> <pre><code class="prism language-java"><span class="token comment">//1. getLocalhost()方法</span>
InetAddress ia1<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia1<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia1<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre> <p>输出结果如下&#xff0c;这是我的IP地址和电脑主机名&#xff1a;</p> <pre><code class="prism language-java">ip地址&#xff1a;<span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span> 主机名&#xff1a;LAPTOP<span class="token operator">-</span>BDJQBB64
</code></pre> <p>还有其他方式&#xff0c;不过一般情况下经常使用的是上面一种和第二种方法&#xff1a;</p> <pre><code class="prism language-java"><span class="token comment">//2. getByName(&#34;ip地址&#34;)</span>
InetAddress ia2<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&#34;LAPTOP-BDJQBB64&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia2<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia2<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3. getByName(&#34;127.0.0.1&#34;)</span>
InetAddress ia3<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&#34;127.0.0.1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia3<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia3<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//4. getByName(&#34;localhost&#34;)</span>
InetAddress ia4<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&#34;localhost&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia4<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia4<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre> <p>输出结果如下&#xff1a;</p> <pre><code class="prism language-java">ip地址&#xff1a;<span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span> 主机名&#xff1a;LAPTOP<span class="token operator">-</span>BDJQBB64
ip地址&#xff1a;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> 主机名&#xff1a;servserv<span class="token punctuation">.</span>generals<span class="token punctuation">.</span>ea<span class="token punctuation">.</span>com
ip地址&#xff1a;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> 主机名&#xff1a;localhost
</code></pre> </li><li> <p>创建局域网IP地址对象</p> <p>也就是查找说和我这台电脑位于同一个网络中的电脑。</p> <pre><code class="prism language-java">InetAddress ia5<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&#34;192.168.1.0&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//判断指定的电脑/IP在指定时间里能否可达,参数为毫秒数</span>
<span class="token comment">//true表示可达&#xff0c;false表示不可达</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ia5<span class="token punctuation">.</span><span class="token function">isReachable</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia5<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia5<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre> <p>这个IP地址是我编的&#xff0c;是不可达的&#xff0c;所以结果的IP地址和主机名都返回了我输入的地址&#xff1a;</p> <pre><code class="prism language-java"><span class="token boolean">false</span>
ip地址&#xff1a;<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span> 主机名&#xff1a;<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span>
</code></pre> </li><li> <p>创建外网IP地址对象</p> <pre><code class="prism language-java">InetAddress ia6<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&#34;www.baidu.com&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;ip地址&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia6<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34; 主机名&#xff1a;&#34;</span><span class="token operator">&#43;</span>ia6<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre> <p>输出结果&#xff1a;</p> <pre><code class="prism language-java">ip地址&#xff1a;<span class="token number">39.156</span><span class="token number">.66</span><span class="token number">.18</span> 主机名&#xff1a;www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com
</code></pre> <p>还可以获取百度域名下的IP地址所组成的数组&#xff1a;</p> <pre><code class="prism language-java">InetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> ia<span class="token operator">&#61;</span>InetAddress<span class="token punctuation">.</span><span class="token function">getAllByName</span><span class="token punctuation">(</span><span class="token string">&#34;www.baidu.com&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>InetAddress inetAddress <span class="token operator">:</span> ia<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inetAddress<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre> <p>结果如下&#xff1a;</p> <pre><code class="prism language-java">www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token number">39.156</span><span class="token number">.66</span><span class="token number">.14</span>
www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token number">39.156</span><span class="token number">.66</span><span class="token number">.18</span>
</code></pre> </li></ol> 
<h2><a id="42_TCPSocket_274"></a>4.2 基于TCP协议的Socket网络编程</h2> 
<p>Socket编程&#xff1a;</p> 
<ul><li> <p>Socket&#xff08;套接字&#xff09;是网络中的一个通信结点。</p> 
  <blockquote> 
   <p>每一条TCP连接有两个端点&#xff0c;TCP的端点叫做套接字&#xff08;socket&#xff09;或插口。根据RFC 793的定义&#xff1a;端口号<strong>拼接到</strong>&#xff08;Concatenated with&#xff09;IP地址构成了套接字。因此&#xff0c;套接字的表示方法是在点分之进制的IP地址后面写上端口号&#xff0c;中间用冒号或者逗号隔开。例如&#xff0c;若IP地址是192.3.4.5而端口号是80&#xff0c;那么得到的套接字就是(192.3.4.5:80)。总之&#xff0c;我们有</p> 
   <blockquote> 
    <p>套接字socket &#61; ( IP地址 : 端口号 )</p> 
   </blockquote> 
  </blockquote> </li><li> <p>分为客户端Socket和服务器ServerSocket。</p> </li><li> <p>通信要求&#xff1a;IP地址&#43;端口号。</p> </li></ul> 
<h3><a id="421__288"></a>4.2.1 开发步骤</h3> 
<p>服务器端步骤&#xff1a;</p> 
<ul><li>创建ServerSocket&#xff0c;指定端口号。</li><li>调用accept等待客户端接入。</li><li>使用<strong>输入流</strong>&#xff0c;<strong>接受请求</strong>数据到服务器&#xff08;等待&#xff09;。</li><li>使用<strong>输出流</strong>&#xff0c;<strong>发送响应</strong>数据给客户端。</li><li>释放资源。</li></ul> 
<p>客户端步骤&#xff1a;</p> 
<ul><li>创建Socket&#xff0c;指定服务器IP &#43; 端口号。</li><li>使用<strong>输出流</strong>&#xff0c;<strong>发送请求</strong>数据到服务器。</li><li>使用<strong>输入流</strong>&#xff0c;<strong>接受响应</strong>数据到客户端&#xff08;等待&#xff09;。</li><li>释放资源。</li></ul> 
<h3><a id="422_TCP_305"></a>4.2.2 TCP编程案例一</h3> 
<ul><li>TCP编程实现客户端发送数据给服务器端。</li></ul> 
<pre><code class="prism language-java"><span class="token comment">/**
 * TCP服务器端
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpServer</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{<!-- --></span>
<span class="token comment">//		1. 创建服务器套接字ServerSocket&#xff0c;绑定端口号。</span>
		ServerSocket listener<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		2. 调用accept&#xff0c;侦听并接受连接到此服务器套接字的请求</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器已启动...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Socket socket<span class="token operator">&#61;</span>listener<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
<span class="token comment">//		3. 使用输入流&#xff0c;接受请求数据到服务器&#xff08;等待&#xff09;。</span>
		InputStream is<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//使用转换流&#xff0c;以接收中文数据</span>
		BufferedReader br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;客户发送&#xff1a;&#34;</span><span class="token operator">&#43;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		4. 使用输出流&#xff0c;发送响应数据给客户端。【可选】</span>
<span class="token comment">//		5. 释放资源。</span>
		br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		listener<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>创建服务器套接字时可以绑定一个端口&#xff0c;如上述代码块中的6666&#xff0c;端口号范围可以是0~65535之间的&#xff0c;但是我们在使用的时候最好使用1024之后的&#xff0c;因为之前都是被占用的公认端口&#xff0c;参数0表示可以在任何空闲端口上创建套接字&#xff1b;accept方法侦听并接受到此套接字的连接&#xff0c;返回一个新套接字&#xff08;客户端套接字&#xff09;&#xff0c;该方法在接收到传入连接之前会一直<strong>阻塞</strong>。<code>getInputStream()</code>方法返回套接字的输入流&#xff0c;还有对应的<code>getOutputStream()</code>方法&#xff0c;返回套接字的输出流。</p> 
<pre><code class="prism language-java"><span class="token comment">/*
 * TCP客户端
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpClient</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnknownHostException<span class="token punctuation">,</span> IOException <span class="token punctuation">{<!-- --></span>
<span class="token comment">//		1. 创建Socket&#xff0c;指定服务器IP &#43; 端口号。</span>
		Socket socket<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">&#34;172.16.0.133&#34;</span><span class="token punctuation">,</span> <span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		2. 使用输出流&#xff0c;发送请求数据到服务器。</span>
		OutputStream os<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//使用转换流&#xff0c;写入中文</span>
		BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> <span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;我喜欢你&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		3. 使用输入流&#xff0c;读取服务器回复的数据。【可选】</span>
<span class="token comment">//		4. 释放资源。</span>
		bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>第一步中&#xff0c;端口号要和服务器套接字的端口一致&#xff0c;客户端套接字一旦创建之后&#xff0c;就和服务器建立了连接。</p> 
<p>启动程序时&#xff0c;应该先运行服务器端代码&#xff0c;结果如下&#xff08;程序处于阻塞状态&#xff09;&#xff1a;</p> 
<pre><code class="prism language-java">服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre> 
<p>再运行客户端代码&#xff0c;结果如下&#xff1a;</p> 
<pre><code class="prism language-java">服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
客户发送&#xff1a;我喜欢你
</code></pre> 
<h3><a id="423__372"></a>4.2.3 案例一分析</h3> 
<p>首先创建服务器套接字ServerSocket并绑定端口&#xff0c;然后创建客户端套接字Socket与服务器建立连接&#xff1b;</p> 
<p>服务器套接字ServerSocket调用<code>accept()</code>侦听连接请求&#xff0c;然后返回一个套接字接收字节流&#xff1b;</p> 
<p>客户端套接字可以通过流发送信息给服务器的Socket套接字&#xff0c;服务器的Socket套接字也可以通过流响应客户端套接字。</p> 
<img src="https://pic.downk.cc/item/5faa57de1cd1bbb86bb68d09.png" /> 
<h3><a id="424_TCP_382"></a>4.2.4 TCP编程案例二</h3> 
<ul><li>TCP编程实现客户端上传文件给服务器端。</li></ul> 
<pre><code class="prism language-java"><span class="token comment">/**
 * TCP服务端
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpFileServer</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>
		<span class="token comment">//1. 创建ServerSocket&#xff0c;绑定端口</span>
		ServerSocket listener<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//2. 侦听并接受到此套接字的连接</span>
		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器已启动...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Socket socket<span class="token operator">&#61;</span>listener<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//3. 获取输入流</span>
		InputStream is<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//4. 边读取&#xff0c;边保存</span>
		FileOutputStream fos<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&#34;d:\\MrG2.jpg&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//创建缓冲区</span>
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> count<span class="token operator">&#61;</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>count<span class="token operator">&#61;</span>is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!&#61;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器接收完毕。&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//关闭资源</span>
		fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		listener<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>步骤和案例一差不多&#xff0c;只是换成了文件的读写。服务器端从输入流中读取数据到缓冲区&#xff0c;又从缓冲区写入到输出流到<code>d:\\MrG2.jpg</code>中&#xff0c;在这个案例中&#xff0c;我传递的是一张图片。</p> 
<pre><code class="prism language-java"><span class="token comment">/**
 * TCP客户端
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpFileClient</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>
		<span class="token comment">//1. 创建Socket&#xff0c;并制定IP地址和端口</span>
		Socket socket<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">&#34;172.16.0.133&#34;</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//2. 使用输出流</span>
		OutputStream os<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//3. 读取文件</span>
		FileInputStream fis<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&#34;d:\\MrG1.jpg&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//创建缓冲区</span>
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> count<span class="token operator">&#61;</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token comment">//边读取&#xff0c;变写入流</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>count<span class="token operator">&#61;</span>fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!&#61;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;文件已发送。&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//4. 关闭资源</span>
		fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>客户端从本地读取文件数据到流中&#xff0c;然后将数据写入到输出流中。</p> 
<p>首先启动服务器&#xff08;程序堵塞中&#xff09;&#xff1a;</p> 
<pre><code class="prism language-java">服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre> 
<p>然后启动客户端&#xff0c;客户端控制台显示如下&#xff1a;</p> 
<pre><code class="prism language-java">文件已发送。
</code></pre> 
<p>服务器端控制台显示如下&#xff1a;</p> 
<pre><code class="prism language-java">服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
服务器接收完毕。
</code></pre> 
<p>打开D盘下的文件发现多了一个<code>MrG2.jpg</code>&#xff0c;说明程序运行成功。</p> 
<h3><a id="425_TCP_470"></a>4.2.5 TCP编程案例三</h3> 
<ul><li>TCP实现多个客户端发送数据给服务器端。</li></ul> 
<p>服务器端要接收多个客户端发送的数据&#xff0c;服务器端就需要创建多个线程&#xff0c;使每个线程独立处理每个客户端的任务。</p> 
<pre><code class="prism language-java"><span class="token comment">//TCP服务器端</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpChatServer</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>
		<span class="token comment">//创建服务器套接字</span>
		ServerSocket listener<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器已连接...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//接收客户端请求</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			<span class="token comment">//死循环&#xff0c;来一个客户端请求接收一个</span>
			Socket socket<span class="token operator">&#61;</span>listener<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34;进来了。&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//创建子线程来处理客户端发送的数据</span>
			<span class="token keyword">new</span> <span class="token class-name">SocketThreads</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>	
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<pre><code class="prism language-java"><span class="token comment">//线程类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SocketThreads</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{<!-- --></span>
	<span class="token keyword">private</span> Socket socket<span class="token punctuation">;</span>
	
	<span class="token keyword">public</span> <span class="token function">SocketThreads</span><span class="token punctuation">(</span>Socket socket<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token operator">&#61;</span>socket<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token annotation punctuation">&#64;Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>	
		<span class="token keyword">if</span><span class="token punctuation">(</span>socket<span class="token operator">!&#61;</span>null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			BufferedReader br<span class="token operator">&#61;</span>null<span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
				<span class="token comment">//创建输入流</span>
				InputStream is<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//使用转换流以接收中文</span>
				br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
					String data<span class="token operator">&#61;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">//客户端已关闭</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token operator">&#61;&#61;</span>null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
						<span class="token keyword">break</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#34;quit&#34;</span><span class="token punctuation">)</span><span class="token operator">||</span>data<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#34;退出&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
						<span class="token keyword">break</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34;说&#xff1a;&#34;</span><span class="token operator">&#43;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>		
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>			
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>
				<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
					br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&#43;</span><span class="token string">&#34;退出了。&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>			
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>	
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<pre><code class="prism language-java"><span class="token comment">//TCP客户端</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TcpChatClient</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{<!-- --></span>
		<span class="token comment">//创建客户端套接字</span>
		Socket socket<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">&#34;172.16.0.133&#34;</span><span class="token punctuation">,</span><span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;客户端已建立连接...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//获取输出流</span>
		OutputStream os<span class="token operator">&#61;</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			Scanner in<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
			String data<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//输入换行符&#xff0c;否则线程类中readLine()不会返回</span>
			bw<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#34;quit&#34;</span><span class="token punctuation">)</span><span class="token operator">||</span>data<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&#34;退出&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>然后再新建一个客户端类&#xff0c;代码同上&#xff0c;修改一下IP地址&#xff08;当然IP地址必须是存在的&#xff09;。</p> 
<ol><li>首先启动服务器查看服务器端代码的控制台&#xff1a;</li></ol> 
<pre><code class="prism language-java">服务器已连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre> 
<ol start="2"><li>然后启动客户端程序1&#xff0c;客户端1代码控制台&#xff1a;</li></ol> 
<pre><code class="prism language-java">客户端已建立连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre> 
<p>服务器代码控制台&#xff1a;</p> 
<pre><code class="prism language-java">服务器已连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>进来了。
</code></pre> 
<ol start="3"><li>在客户端代码的控制台中输入信息后回车&#xff0c;服务器端代码控制台&#xff1a;</li></ol> 
<pre><code class="prism language-java">服务器已连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>进来了。
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>说&#xff1a;有人吗&#xff1f;
</code></pre> 
<ol start="4"><li>启动客户端程序2&#xff0c;服务器代码控制台显示&#xff1a;</li></ol> 
<pre><code class="prism language-java">服务器已连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>进来了。
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>说&#xff1a;有人吗&#xff1f;
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>进来了。
</code></pre> 
<ol start="5"><li>在客户端2控制台输入信息后回车&#xff0c;服务器代码控制台显示&#xff1a;</li></ol> 
<pre><code class="prism language-java">服务器已连接<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>进来了。
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>说&#xff1a;有人吗&#xff1f;
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>进来了。
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>说&#xff1a;有&#xff0c;你是GG还是MM&#xff1f;
</code></pre> 
<ol start="5"><li>然后客户端程序输出&#34;quit&#34;或者“退出”&#xff0c;服务器控制台显示&#xff1a;</li></ol> 
<pre><code class="prism language-java"><span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>进来了。
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>说&#xff1a;有人吗&#xff1f;
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>进来了。
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>说&#xff1a;有&#xff0c;你是GG还是MM&#xff1f;
<span class="token operator">/</span><span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.133</span>退出了。
<span class="token operator">/</span><span class="token number">10.2</span><span class="token number">.51</span><span class="token number">.23</span>退出了。
</code></pre> 
<p>此处模拟了两个客户端&#xff0c;注意客户端中的IP地址必须是可达的。</p> 
<h3><a id="426_TCP_627"></a>4.2.6 TCP变成案例四</h3> 
<p><strong>使用Socket实现注册登录</strong></p> 
<ul><li> <p>使用Socket变成实现服务器端注册&#xff1a;</p> 
  <ul><li> <p>注册信息保存在properties中。</p> </li><li> <p>封装格式&#xff1a;</p> <p>id &#61; {id : “1001” , name : “tang” , pwd : “036” , age &#61; 21}</p> <p>注册成功后返回字符串“注册成功”。</p> <p>在下面的案例中&#xff0c;用户属性文件会以这样的键值对进行保存和加载。</p> </li></ul> </li><li> <p>使用Socket变成实现服务器端登录&#xff1a;</p> 
  <ul><li>获取properties文件中的用户信息&#xff0c;进行用户id与密码的校验。</li><li>校验成功后返回字符串“登录成功”。</li></ul> </li></ul> 
<hr /> 
<p><strong>首先演示实现服务器注册的功能。</strong></p> 
<pre><code class="prism language-java"><span class="token comment">//服务器端</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServer</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token keyword">new</span> <span class="token class-name">RegistThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>服务器端通过调用注册线程来执行程序&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token comment">//注册线程</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RegistThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{<!-- --></span>
	<span class="token annotation punctuation">&#64;Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
			<span class="token comment">//创建服务器套接字</span>
			ServerSocket listener<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//调用accept()</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;注册服务器已启动...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			Socket socket<span class="token operator">&#61;</span>listener<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//获取输入输出流</span>
			<span class="token comment">//输入流用来读取客户端发送的数据</span>
			BufferedReader br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//输出流用来响应客户端</span>
			BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//接收客户端发送的数据</span>
			<span class="token comment">//{id : 1001 , name : tang , pwd : 036 , age &#61; 21}</span>
			String json<span class="token operator">&#61;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//全掉前后的大括号&#xff0c;然后按逗号分隔成字符串数组</span>
			<span class="token comment">//id : 1001 , name : tang , pwd : 036 , age &#61; 21</span>
			String<span class="token punctuation">[</span><span class="token punctuation">]</span> infos<span class="token operator">&#61;</span>json<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;,&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//取第一个数组id:1001&#xff0c;然后用冒号分隔取1001</span>
			String id<span class="token operator">&#61;</span>infos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;:&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			
			<span class="token comment">//加载用户属性文件</span>
			Properties properties<span class="token operator">&#61;</span>Tools<span class="token punctuation">.</span><span class="token function">loadProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//判断用户在属性文件中是否已存在</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
				bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;此用户已存在&#xff0c;请登录&#xff01;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
				<span class="token comment">//保存注册信息</span>
				Tools<span class="token punctuation">.</span><span class="token function">savaProperties</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
				bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;注册成功&#xff01;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			bw<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			listener<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>在注册线程中需要<strong>加载用户文件</strong>&#xff0c;用来判断注册的用户信息是否已经存在&#xff1b;如果不存在&#xff0c;还需要<strong>保存用户信息</strong>。这两个功能写进了Tools类文件中&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Tools</span> <span class="token punctuation">{<!-- --></span>
	<span class="token comment">//1.加载属性文件</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> Properties <span class="token function">loadProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token comment">//1.创建属性集合</span>
		Properties properties<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//判断文件是否存在</span>
		File file<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&#34;User.properties&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			FileInputStream fis<span class="token operator">&#61;</span>null<span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
				<span class="token comment">//加载文件到流中</span>
				fis<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//从流中加载数据</span>
				properties<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>fis<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>
				<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
					fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>				
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> properties<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//2.保存用户信息</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">savaProperties</span><span class="token punctuation">(</span>String json<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token comment">//取id</span>
		String<span class="token punctuation">[</span><span class="token punctuation">]</span> infos<span class="token operator">&#61;</span>json<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;,&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		String id<span class="token operator">&#61;</span>infos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;:&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token comment">//创建Properties集合保存用户信息</span>
		Properties properties<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
		FileOutputStream fos<span class="token punctuation">;</span>
		BufferedWriter bw <span class="token operator">&#61;</span> null<span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
			<span class="token comment">//以追加的方式创建写入文件的流</span>
			fos <span class="token operator">&#61;</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&#34;User.properties&#34;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//将集合中的数据保存到流中</span>
			properties<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>bw<span class="token punctuation">,</span> <span class="token string">&#34;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>bw <span class="token operator">!&#61;</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
				<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
					bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>在客户端代码中&#xff0c;需要让用户选择注册或者登陆&#xff0c;然后分别调用注册和登陆功能&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>	
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请选择 1.注册 2.登录&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Scanner in<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> choice<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
            <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
                <span class="token comment">//注册</span>
                <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
            <span class="token comment">//演示注册&#xff0c;登陆暂未实现</span>
            <span class="token function">Login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>在注册功能中实现客户端与服务端交换数据&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//创建客户端套接字</span>
    Socket socket<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">&#34;172.16.0.133&#34;</span><span class="token punctuation">,</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取输出流发送数据</span>
    BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取输入流&#xff0c;读取服务器响应数据</span>
    BufferedReader br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器回复&#xff1a;&#34;</span><span class="token operator">&#43;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//关闭资源</span>
    br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>客户端发送了用户输入的注册信息&#xff0c;获取用户输入的信息的功能写在了getUserInfo中&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token comment">//获取用户输入的注册信息&#xff0c;以特定格式返回。</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    Scanner in<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入用户ID&#xff08;唯一&#xff09;&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String id<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入姓名&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String name<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入密码&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String pwd<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入年龄&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> age<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String json<span class="token operator">&#61;</span><span class="token string">&#34;{id:&#34;</span><span class="token operator">&#43;</span>id<span class="token operator">&#43;</span><span class="token string">&#34;,name:&#34;</span><span class="token operator">&#43;</span>name<span class="token operator">&#43;</span><span class="token string">&#34;,pwd:&#34;</span><span class="token operator">&#43;</span>pwd<span class="token operator">&#43;</span><span class="token string">&#34;,age:&#34;</span><span class="token operator">&#43;</span>age<span class="token operator">&#43;</span><span class="token string">&#34;}&#34;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> json<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>服务器注册功能写完后&#xff0c;首先运行服务器端代码&#xff0c;然后运行客户端代码&#xff0c;按照提示输入用户信息&#xff0c;回车&#xff0c;显示注册成功&#xff1a;</p> 
<pre><code class="prism language-java">请选择 <span class="token number">1.</span>注册 <span class="token number">2.</span>登录
<span class="token number">1</span>
请输入用户ID&#xff08;唯一&#xff09;&#xff1a;
lazydog036
请输入姓名&#xff1a;
tang
请输入密码&#xff1a;
<span class="token number">123</span>
请输入年龄&#xff1a;
<span class="token number">21</span>
服务器回复&#xff1a;注册成功&#xff01;
</code></pre> 
<p>查看一下本地文件&#xff0c;多了一个User.properties文件&#xff0c;打开之后里面已经被写入了用户信息&#xff1a;</p> 
<pre><code class="prism language-java">#
#Wed Nov <span class="token number">11</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">49</span><span class="token operator">:</span><span class="token number">54</span> CST <span class="token number">2020</span>
lazydog036<span class="token operator">&#61;</span><span class="token punctuation">{<!-- --></span>id\<span class="token operator">:</span>lazydog036<span class="token punctuation">,</span>name\<span class="token operator">:</span>tang<span class="token punctuation">,</span>pwd\<span class="token operator">:</span><span class="token number">123</span><span class="token punctuation">,</span>age\<span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">}</span>
</code></pre> 
<p>再次运行服务器和客户端程序&#xff0c;输入相同ID后回车&#xff0c;提示已存在&#xff1a;</p> 
<pre><code class="prism language-java">请选择 <span class="token number">1.</span>注册 <span class="token number">2.</span>登录
<span class="token number">1</span>
请输入用户ID&#xff08;唯一&#xff09;&#xff1a;
lazydog036
请输入姓名&#xff1a;
wang
请输入密码&#xff1a;
<span class="token number">123</span>
请输入年龄&#xff1a;
<span class="token number">22</span>
服务器回复&#xff1a;此用户已存在&#xff0c;请登录&#xff01;
</code></pre> 
<hr /> 
<p>演示服务器登录&#xff0c;和注册大致差不多&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token comment">//登录线程</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{<!-- --></span>
	<span class="token annotation punctuation">&#64;Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
		<span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>
			<span class="token comment">//创建服务器套接字</span>
			ServerSocket listener<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//调用accept()</span>
			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;登录服务器已启动...&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			Socket socket<span class="token operator">&#61;</span>listener<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//获取输入输出流</span>
			<span class="token comment">//输入流用来读取客户端发送的数据</span>
			BufferedReader br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//输出流用来响应客户端</span>
			BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//接收客户端发送的数据</span>
			<span class="token comment">//{id : 1001 , pwd : 036 }</span>
			String json<span class="token operator">&#61;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//全掉前后的大括号&#xff0c;然后按逗号分隔成字符串数组</span>
			<span class="token comment">//id : 1001 , pwd : 036 </span>
			String<span class="token punctuation">[</span><span class="token punctuation">]</span> infos<span class="token operator">&#61;</span>json<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;,&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//取第一个数组id:1001&#xff0c;然后用冒号分隔取1001</span>
			String id<span class="token operator">&#61;</span>infos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;:&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			
			<span class="token comment">//加载用户属性文件</span>
			Properties properties<span class="token operator">&#61;</span>Tools<span class="token punctuation">.</span><span class="token function">loadProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//判断用户在属性文件中是否已存在</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
				<span class="token comment">//获取用户输入的密码</span>
				String pwd<span class="token operator">&#61;</span>json<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;,&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;:&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token comment">//获取文件中存储的密码</span>
				String pwd2<span class="token operator">&#61;</span>properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;,&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#34;:&#34;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>pwd<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pwd2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
					bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;登录成功&#xff01;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
					bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;密码错误&#xff0c;请重试&#xff01;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>			
			<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>				
				bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#34;此用户不存在&#xff0c;请先注册&#xff01;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			bw<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			listener<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>登录线程中的代码和注册线程差不多&#xff0c;只是在验证用户信息的时候改成判断密码是否正确。需要注意的是登录线程需要使用其他端口&#xff0c;不能占用服务器注册线程的端口&#xff1b;在接收数据的时候只接收用户名和密码。</p> 
<pre><code class="prism language-java"><span class="token comment">//登录功能</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//创建客户端套接字</span>
    Socket socket<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">&#34;172.16.0.133&#34;</span><span class="token punctuation">,</span><span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取输出流发送数据</span>
    BufferedWriter bw<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">getLoginInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取输入流&#xff0c;读取服务器响应数据</span>
    BufferedReader br<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#34;utf-8&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;服务器回复&#xff1a;&#34;</span><span class="token operator">&#43;</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//关闭资源</span>
    br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>和注册功能几乎一样&#xff0c;但需要注意端口必须和服务器登录线程端口一致。在向服务器发送数据的时候调用了getLoginInfo方法获取用户输入的用户ID和密码&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getLoginInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    Scanner in<span class="token operator">&#61;</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入用户ID&#xff08;唯一&#xff09;&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String id<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&#34;请输入密码&#xff1a;&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String pwd<span class="token operator">&#61;</span>in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    String json<span class="token operator">&#61;</span><span class="token string">&#34;{id:&#34;</span><span class="token operator">&#43;</span>id<span class="token operator">&#43;</span><span class="token string">&#34;,pwd:&#34;</span><span class="token operator">&#43;</span>pwd<span class="token operator">&#43;</span><span class="token string">&#34;}&#34;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> json<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre> 
<p>然后在服务器代码中启动两个线程并运行&#xff1a;</p> 
<pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServer</span> <span class="token punctuation">{<!-- --></span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>		
		<span class="token keyword">new</span> <span class="token class-name">RegistThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">LoginThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<pre><code class="prism language-java">登录服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
注册服务器已启动<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre> 
<p>启动客户端选择登录功能&#xff0c;输入已存在的账号&#xff1a;</p> 
<pre><code class="prism language-java">请选择 <span class="token number">1.</span>注册 <span class="token number">2.</span>登录
<span class="token number">2</span>
请输入用户ID&#xff08;唯一&#xff09;&#xff1a;
lazydog036
请输入密码&#xff1a;
<span class="token number">123</span>
服务器回复&#xff1a;登录成功&#xff01;
</code></pre> 
<p>再次启动服务器和客户端程序&#xff0c;输入错误的账号&#xff1a;</p> 
<pre><code class="prism language-java">请选择 <span class="token number">1.</span>注册 <span class="token number">2.</span>登录
<span class="token number">2</span>
请输入用户ID&#xff08;唯一&#xff09;&#xff1a;
lazydog036
请输入密码&#xff1a;
<span class="token number">666</span>
服务器回复&#xff1a;密码错误&#xff0c;请重试&#xff01;
</code></pre> 
<p>到这里案例四就结束了~</p>
                </div>
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css" rel="stylesheet">
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-80ad9b4f5b.css" rel="stylesheet">
        </div>
    </article>
</div>
<script>
    // 敏感词替换
    // replaceArticleContentWords(blogSensitiveWords,'sensitiveWords')
    // 高亮词
    // replaceArticleContentWords(blogHotWords,'hotWords')
    // 公共方法
    function replaceArticleContentWords(words,type){
      if(words){   
        var getContentViews = document.getElementById("content_views");
        var getContentTitle = document.getElementById("articleContentId");
        var contentViewsInnerHTML = getContentViews.innerHTML;
        var contentTitleInnerHTML = getContentTitle.innerHTML;
        var keyWordsJsonArr = [];
        var keyWordsArr = words.split(',');
        function repeatTimes(str, num){
            return num > 1 ? str += repeatTimes(str, --num): str;
        }
        for(var i = 0; i < keyWordsArr.length; i++){
            var keyWordsJson = {} ;
            keyWordsJson.key = keyWordsArr[i];
            if(type == 'hotWords'){
              keyWordsJson.value = '<span class="hot-words-highlight">'+keyWordsArr[i]+'</span>'
            }else if(type == 'sensitiveWords'){
              keyWordsJson.value = repeatTimes("*",keyWordsArr[i].length);
            }else {
              keyWordsJson.value = keyWordsArr[i]
            }
            keyWordsJsonArr.push(keyWordsJson);
        }
        var reg;
        for(var i = 0; i < keyWordsJsonArr.length; i++){
            var item = keyWordsJsonArr[i]; 
            if(type == 'hotWords'){
              reg = new RegExp(item.key,"ig");
            }
            if(type == 'sensitiveWords'){
              reg = new RegExp(item.key+"(?!([^<]*>)|([^<]*<\/a>))","ig");  
            }
            contentViewsInnerHTML = contentViewsInnerHTML.replace(reg,item.value);
            contentTitleInnerHTML = contentTitleInnerHTML.replace(reg,item.value);
        }
        getContentViews.innerHTML=contentViewsInnerHTML;
        getContentTitle.innerHTML=contentTitleInnerHTML;
      }
    }
</script>
<div class="more-toolbox" id="toolBarBox">
    <span id="fixedBar"></span>
    <div class="left-toolbox">
        <ul class="toolbox-list">
            <li class="tool-item tool-item-size tool-active is-like" id="is-like"><a>
            <img style="display:none;" id="is-like-imgactive-animation-like" class="animation-dom active-animation" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarThumbUpactive.png" alt="">
            <img class="isactive" style="display:none" id="is-like-imgactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarThumbUpactive.png" alt="">
            <img class="isdefault" style="display:block" id="is-like-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarThumbUp.png" alt="">   
            <span class="name" id="is-like-span">点赞</span>
            <span id="spanCount" class="count">
            </span>
            </a></li>
            <li class="tool-item tool-item-size tool-active tool-item-comment">
                <a href="#commentBox">
                    <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarComment.png" alt="">
                    <img class="isactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCommentactive.png" style="display:none;" alt="">
                    <span class="name">评论</span>
                    <span class="count">
                    </span>
                </a>
            </li>
            <li class="tool-item tool-item-size tool-active tool-QRcode" id="tool-share">
                <a href="javascript:;" data-report-click='{"mod":"1582594662_002","spm":"1001.2101.3001.4129","ab":"new"}'>
                    <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarShare.png" alt="">
                    <img class="isactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarShareactive.png" style="display:none;" alt="">
                    <span class="name">分享</span>
                </a>
                <div class="QRcode" id="tool-QRcode" style="left:-92%;">
                    <span id="QRcode-close">x</span>
                    <p class="title">
                    海报分享
                    </p>
                    <div id='shareCode'></div>
                    <p>
                    扫一扫，分享海报
                    </p>
                </div>
            </li>
            <li class="tool-item tool-item-size tool-active is-collection ">
                <a href="javascript:;" data-report-click='{"mod":"popu_824","spm":"1001.2101.3001.4130","ab":"new"}'>
                    <img style="display:none" id="is-collection-img-collection" class="animation-dom active-animation" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive.png" alt="">
                    <img class="isdefault" id="is-collection-img" style="display:block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect.png" alt="">
                    <img class="isactive" id="is-collection-imgactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive.png" alt="">
                    <span class="name" id="is-collection">收藏</span>
                    <span class="count get-collection" id="get-collection">
                    </span>
                </a>
            </li>
            <li class="tool-item tool-item-size tool-active tool-reward">
                <a  id="toolreward" data-report-click='{"mod":"popu_830","spm":"1001.2101.3001.4237","dest":"","ab":"new"}'>
                    <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarReward.png" alt="">
                    <img class="isactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarRewardactive.png" style="display:none;" alt="">
                    <span class="name">打赏</span>
                </a>
<div id="reward" class="reward-box">
	<p class="rewad-title">打赏<span class="reward-close"><svg t="1567152543821" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="10924" xmlns:xlink="http://www.w3.org/1999/xlink" width="12" height="12"><defs><style type="text/css"></style></defs><path d="M512 438.378667L806.506667 143.893333a52.032 52.032 0 1 1 73.6 73.621334L585.621333 512l294.485334 294.485333a52.074667 52.074667 0 0 1-73.6 73.642667L512 585.621333 217.514667 880.128a52.053333 52.053333 0 1 1-73.621334-73.642667L438.378667 512 143.893333 217.514667a52.053333 52.053333 0 1 1 73.621334-73.621334L512 438.378667z" fill="" p-id="10925"></path></svg></span></p>
	<dl>
		<dd>
		<a href="https://blog.csdn.net/weixin_41121133" data-report-click='{"mod":"popu_379","dest":"https://blog.csdn.net/weixin_41121133","ab":"new"}'>
			<img src="https://profile.csdnimg.cn/8/0/A/3_weixin_41121133" class="avatar_pic">
		</a>
		</dd>
		<dt>
			<p class="blog-name">lazydog036</p>
			<p class="blog-discript">你的鼓励将是我创作的最大动力</p>
		</dt>
	</dl>
	<div class="change-bt-box">
		<span class="reward-bt reward-bt-coin">C币</span>
		<span class="reward-bt-space"></span>
		<span class="reward-bt reward-bt-money reward-bt-active">余额</span>
	</div>
	<div class="money-box">
			<span class="choose_money choosed" data-id="2">2C币</span>
			<span class="choose_money " data-id="4">4C币</span>
			<span class="choose_money " data-id="6">6C币</span>
			<span class="choose_money " data-id="10">10C币</span>
			<span class="choose_money " data-id="20">20C币</span>
			<span class="choose_money " data-id="50">50C币</span>
	</div>
	<div class="sure-box">
		<p class="is-have-money"><a class="reward-sure">确定</a></p>
	</div>
</div>
            </li>
            <li class="tool-item tool-item-size tool-active tool-more">
              <a class="article-report">
                <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarReport.png" alt="">
                <img class="isactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarReportactive.png" style="display:none;" alt="">
                <span class="name">举报</span>
              </a>
            </li>
            <li class="tool-item">
                    <a class="tool-attend tool-bt-button tool-bt-attend" href="javascript:;" data-report-view='{"mod":"1592215036_002","spm":"1001.2101.3001.4232","extend1":"关注"}'>关注</a>
                <a class="tool-item-follow active-animation" style="display:none;">关注</a>
            </li>
            <li class="tool-item">
                    <p class="company active" id="health-companies" href="javascript:;" >一键三连</p>
                <span class="triplet-prompt">点赞Mark关注该博主, 随时了解TA的最新博文<img class="close-prompt" src="https://csdnimg.cn/release/blogv2/dist/pc/img/closePrompt.png"></span>
            </li>
        </ul>
        <div style="display:flex">
         </div>
         <div class="hot-word-tip-box">
          <span class="hot-word-text">已标记关键词</span>
          <span class="hot-word-count"></span> 
          <span class="hot-word-bar"></span>
          <span class="hot-word-clear">清除标记</span>
        </div>
    </div>  
</div>
<script type=text/javascript crossorigin src="https://csdnimg.cn/release/phoenix/production/qrcode-7c90a92189.min.js"></script>
<script src="//g.csdnimg.cn/??sharewx/1.2.1/sharewx.js" type="text/javascript"></script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/collection-box/2.0.3/collection-box.js"></script>
                <div id="dmp_ad_58" style="width:100%;overflow-x:hidden"><div id="kp_box_58" data-pid="58"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-format="fluid"
     data-ad-layout-key="-gi-21+3s-18+2p"
     data-ad-client="ca-pub-1076724771190722"
     data-ad-slot="2537144170"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script><img class="pre-img-lasy" data-src="https://kunyu.csdn.net/1.png?p=58&a=3805&c=0&k=&spm=1001.2101.3001.5002&d=1&t=3&u=d5f56fbe396444a8929e927e250c823e" style="display: block;width: 0px;height: 0px;"></div></div>
            <div class="second-recommend-box recommend-box">
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/huangxin388/article/details/80260795"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"1","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/huangxin388/article/details/80260795"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/huangxin388/article/details/80260795" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"1","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/huangxin388/article/details/80260795"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control'>
					<em>java</em><em>网络</em><em>编程</em>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/huangxin388" target="_blank"><span class="blog-title">小小本科生</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">05-09</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4193
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/huangxin388/article/details/80260795" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"1","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/huangxin388/article/details/80260795"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>java</em><em>网络</em><em>编程</em>&nbsp; &nbsp; &nbsp; &nbsp; 最近学习了<em>java</em><em>网络</em><em>编程</em>，特在此记录，为方便日后查看，也为了广大小伙伴们有个参考（由易到难）。最最重要的概念：&nbsp; &nbsp; &nbsp; &nbsp; <em>网络</em><em>编程</em>分为服务端和客户端。服务端就相当于我们平时说的服务器，有固定的IP地址，随时等待服务器连接并做出响应；而客户端相当于各种端系统，找到服务端进行连接获取服务（我们下面的程序也是这样，首先启动服务端等待连接，然后启动客户端连接服务端。如...</div>
			</a>
		</div>
	</div>
</div>
            </div>
<a id="commentBox" name="commentBox"></a>
<div class="comment-box">
	<div class="comment-edit-box d-flex">
		<a id="commentsedit"></a>
		<div class="user-img">
			<a href="javascript:void(0);" >
				<img class="show_loginbox" src="https://g.csdnimg.cn/static/user-img/anonymous-User-img.png">
			</a>
		</div>
		<form id="commentform">
			<img class="comment-sofa-flag" src="https://csdnimg.cn/release/blogv2/dist/pc/img/commentFlag@2x.png">
      <textarea class="comment-content" name="comment_content" id="comment_content" placeholder="优质评论可以帮助作者获得更高权重" maxlength="1000"></textarea>
			<div class="comment-emoticon"><img class="comment-emoticon-img" data-url="https://csdnimg.cn/release/blogv2/dist/pc/img/" src="https://csdnimg.cn/release/blogv2/dist/pc/img/emoticon.png" alt="表情包"></div> 
      <span class="comment-emoticon-tip">插入表情</span>
      <div class="comment-emoticon-box">
        <div class="comment-emoticon-img-box">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:001.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/001.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:002.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/002.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:003.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/003.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:004.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/004.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:005.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/005.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:006.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/006.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:007.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/007.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:008.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/008.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:009.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/009.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:010.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/010.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:011.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/011.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:012.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/012.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:013.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/013.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:014.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/014.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:015.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/015.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:016.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/016.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:017.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/017.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:018.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/018.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:019.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/019.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:020.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/020.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:021.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/021.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:022.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/022.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:023.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/023.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:024.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/024.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:025.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/025.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:026.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/026.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:027.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/027.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:028.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/028.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:029.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/029.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:030.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/030.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:031.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/031.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:032.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/032.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:033.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/033.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:034.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/034.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:035.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/035.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:036.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/036.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:037.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/037.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:038.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/038.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:039.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/039.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:040.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/040.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:041.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/041.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:042.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/042.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:043.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/043.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:044.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/044.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:045.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/045.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:046.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/046.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:047.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/047.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:048.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/048.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:049.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/049.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:050.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/050.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:051.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/051.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:052.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/052.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:053.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/053.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:054.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/054.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:055.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/055.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:056.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/056.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:057.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/057.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:058.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/058.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:059.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/059.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:060.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/060.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:061.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/061.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:062.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/062.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:063.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/063.png">
            <img class="emoticon-monkey-img" data-emoticon="[face]monkey2:064.png[/face]" src="https://g.csdnimg.cn/static/face/monkey2/064.png">
        </div>
      </div>
      <div class="opt-box">
				<div id="ubbtools" class="add_code">
					<a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
				</div>
				<input type="hidden" id="comment_replyId" name="comment_replyId">
				<input type="hidden" id="article_id" name="article_id" value="109628661">
				<input type="hidden" id="comment_userId" name="comment_userId" value="">
				<input type="hidden" id="commentId" name="commentId" value="">
				<div class="dropdown" id="myDrap">
					<a class="dropdown-face d-flex align-items-center" data-toggle="dropdown" role="button"
						aria-haspopup="true" aria-expanded="false">
						<div class="txt-selected text-truncate">添加代码片</div>
						<svg class="icon d-block" width="200px" height="100.00px" viewBox="0 0 2048 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path  d="M597.33333292 298.666667h853.333334L1023.99999992 725.333333 597.33333292 298.666667z"  /></svg>
					</a>
					<ul class="dropdown-menu" id="commentCode" aria-labelledby="drop4">
						<li><a data-code="html">HTML/XML</a></li>
						<li><a data-code="objc">objective-c</a></li>
						<li><a data-code="ruby">Ruby</a></li>
						<li><a data-code="php">PHP</a></li>
						<li><a data-code="csharp">C</a></li>
						<li><a data-code="cpp">C++</a></li>
						<li><a data-code="javascript">JavaScript</a></li>
						<li><a data-code="python">Python</a></li>
						<li><a data-code="java">Java</a></li>
						<li><a data-code="css">CSS</a></li>
						<li><a data-code="sql">SQL</a></li>
						<li><a data-code="plain">其它</a></li>
					</ul>
				</div>
				<div class="right-box" id="rightBox" data-type="2">
							<span id="tip_comment" class="tip">还能输入<em>1000</em>个字符</span>
							<a data-report-click='{"mod":"1582594662_003","spm":"1001.2101.3001.4227","ab":"new"}'><input type="submit"
									class="btn btn-sm btn-comment" value="发表评论"></a>
				</div>
			</div>
		</form>
		<input type="button" class="bt-comment-show" value="评论">
	</div>
	<div class="comment-list-container">
		<a id="comments"></a>
		<div class="comment-list-box">
		</div>
		<div id="commentPage" class="pagination-box d-none"></div>
		<div class="opt-box text-center">
			<div class="btn btn-sm btn-link-blue" id="btnMoreComment"></div>
		</div>
	</div>
</div>            <div class="recommend-box insert-baidu-box">
                <div class="recommend-item-box clearfix" style="display:none"></div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/xingweiyang/article/details/83345796"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"2","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/xingweiyang/article/details/83345796"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/xingweiyang/article/details/83345796" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"2","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/xingweiyang/article/details/83345796"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control'>
					<em>Java</em><em>网络</em><em>编程</em>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/xingweiyang" target="_blank"><span class="blog-title">xingweiyang的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">10-24</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					5880
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/xingweiyang/article/details/83345796" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"2","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/xingweiyang/article/details/83345796"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control'>
				<div class="desc ellipsis-online ellipsis-online-1">                                    **<em>Java</em><em>网络</em><em>编程</em>**
    
                    **<em>网络</em>技术基础**
	OSI模型
我们已经知道，计算机<em>网络</em>是处于不同地理位置的计算机系统通过通信设备和线路连接起来，以<em>网络</em>软件实现资源共享的系统。在计算机<em>网络</em>出现的早期，不同的软件、硬件厂商按照各自的标准生产<em>网络</em>软、硬件产品，这就导致了不同厂商、不同...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/w627782664/article/details/7106984"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"3","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/w627782664/article/details/7106984"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/w627782664/article/details/7106984" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"3","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/w627782664/article/details/7106984"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control'>
					<em>网络</em><em>编程</em>基础概述
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/w627782664" target="_blank"><span class="blog-title">Xu</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">12-27</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					7994
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/w627782664/article/details/7106984" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"3","strategy":"BlogCommendFromMachineLearnPai2","dest":"https://blog.csdn.net/w627782664/article/details/7106984"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>网络</em><em>编程</em>

         <em>网络</em><em>编程</em>对于很多的初学者来说，都是很向往的一种<em>编程</em>技能，但是很多的初学者却因为很长一段时间无法进入<em>网络</em><em>编程</em>的大门而放弃了对于该部分技术的学习。

         在 学习<em>网络</em><em>编程</em>以前，很多初学者可能觉得<em>网络</em><em>编程</em>是比较复杂的系统工程，需要了解很多和<em>网络</em>相关的基础知识，其实这些都不是很必需的。首先来问一个问题：你 会打手机吗？很多人可能说肯定会啊，不就是按按电话号码，拨</div>
			</a>
		</div>
	</div>
</div>
		<dl id="recommend-item-box-tow" class="recommend-item-box type_blog clearfix">
			
		</dl>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/allenfoxxxxx/article/details/90707505"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"4","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/allenfoxxxxx/article/details/90707505"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/allenfoxxxxx/article/details/90707505" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"4","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/allenfoxxxxx/article/details/90707505"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control'>
					<em>Java</em> <em>网络</em><em>编程</em>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/allenfoxxxxx" target="_blank"><span class="blog-title">ZaynFox的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">05-30</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					2万+
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/allenfoxxxxx/article/details/90707505" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"4","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/allenfoxxxxx/article/details/90707505"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>网络</em><em>编程</em>
一、<em>网络</em><em>编程</em>基础概念
首先理清一个概念：<em>网络</em><em>编程</em>不等于网站<em>编程</em>，<em>网络</em><em>编程</em>即使用套接字来达到进程间通信，现在一般称为TCP/IP<em>编程</em>。
计算机<em>网络</em>：
把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大，功能强的<em>网络</em>系统，从而使众多的计算机可以方便的互相传递信息，共享硬件，软件，数据信息等资源。
计算机<em>网络</em>的主要功能：

资源共享
信息传输与集中处理
均衡负荷与分布处理
...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/wenzhi20102321/article/details/52620323"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"5","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/wenzhi20102321/article/details/52620323"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/wenzhi20102321/article/details/52620323" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"5","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/wenzhi20102321/article/details/52620323"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control'>
					<em>Java</em><em>网络</em><em>编程</em>总结
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/wenzhi20102321" target="_blank"><span class="blog-title">wenzhi的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">09-22</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					1万+
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/wenzhi20102321/article/details/52620323" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"5","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/wenzhi20102321/article/details/52620323"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-5.control'>
				<div class="desc ellipsis-online ellipsis-online-1">本文主要对<em>java</em><em>网络</em><em>编程</em>Socket类的使用做总结，其中Socket对象可以进行数据的读取和写入是必须要知道的！</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/qq_26816591/article/details/53033002"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"6","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/qq_26816591/article/details/53033002"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/qq_26816591/article/details/53033002" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"6","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/qq_26816591/article/details/53033002"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control'>
					<em>Java</em><em>网络</em><em>编程</em>第一章
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/qq_26816591" target="_blank"><span class="blog-title">哎一入江湖岁月催的专栏</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">11-04</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4084
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/qq_26816591/article/details/53033002" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"6","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/qq_26816591/article/details/53033002"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-6.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>网络</em><em>编程</em>第一章笔记
首先说明一下：这是<em>JAVA</em><em>网络</em><em>编程</em>个人阅读笔记，书籍是《<em>Java</em><em>网络</em><em>编程</em>》第四版，原著：Elliotte Rusty Harold,译者：李帅，荆涛，中国电力出版社出版。


图 《<em>Java</em><em>网络</em><em>编程</em>》
在这里我提供一下<em>Java</em><em>网络</em><em>编程</em>此书的PDF版，大家可以看一下，仅供学习，请勿用于商业用途，资源源于<em>网络</em>。
链接：http://pan.baidu.com/s/1mi</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/a724888/article/details/75048252"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"7","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/75048252"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/a724888/article/details/75048252" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"7","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/75048252"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control'>
					<em>Java</em><em>网络</em><em>编程</em>和NIO详解开篇：<em>Java</em><em>网络</em><em>编程</em>基础
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/a724888" target="_blank"><span class="blog-title">程序员书单</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">07-13</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					6666
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/a724888/article/details/75048252" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"7","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/75048252"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-7.control'>
				<div class="desc ellipsis-online ellipsis-online-1">老曹眼中的<em>网络</em><em>编程</em>基础



转自：https://mp.weixin.qq.com/s/XXMz5uAFSsPdg38bth2jAA



我们是幸运的，因为我们拥有<em>网络</em>。<em>网络</em>是一个神奇的东西，它改变了你和我的生活方式，改变了整个世界。 然而，<em>网络</em>的无标度和小世界特性使得它又是复杂的，无所不在，无所不能，以致于我们无法区分甚至无法描述。

对于一个码农而言，了解<em>网络</em>的基础知识可能还是从...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/dosthing/article/details/83046052"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"8","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/dosthing/article/details/83046052"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/dosthing/article/details/83046052" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"8","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/dosthing/article/details/83046052"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control'>
					<em>Java</em><em>网络</em><em>编程</em>实现
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/dosthing" target="_blank"><span class="blog-title">dosthing的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">10-14</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					1万+
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/dosthing/article/details/83046052" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"8","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/dosthing/article/details/83046052"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-8.control'>
				<div class="desc ellipsis-online ellipsis-online-1">前言

计算机网路实现了多个<em>网络</em>终端的互联，彼此之间能够进行数据交流。而<em>网络</em>应用程序就是在已连接的不同终端设备上运行的程序，这些<em>网络</em>程序相互之间可以进行数据交互。<em>网络</em>程序的数据交互则依赖于TCP/IP协议，在实际应用中TCP<em>网络</em>程序提供可靠的数据通信，而UDP<em>网络</em>程序则不保证数据的可靠性，但是协议简单、传输速度快（比如用在音视频数据传输，它们不需要很高的可靠性，偶尔丢帧是可以忍受的）。

Serv...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/okjohn/article/details/384989"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"9","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/okjohn/article/details/384989"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/okjohn/article/details/384989" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"9","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/okjohn/article/details/384989"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control'>
					<em>Java</em><em>网络</em><em>编程</em>入门学习
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/okjohn" target="_blank"><span class="blog-title">okJohn&#39;s  blog</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">05-31</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					2570
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/okjohn/article/details/384989" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"9","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/okjohn/article/details/384989"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-9.control'>
				<div class="desc ellipsis-online ellipsis-online-1">1. &nbsp;基于URL的高层次<em>java</em><em>网络</em><em>编程</em>　　应用层的<em>编程</em>。&nbsp;　　主要用到URL类(定义时需要指定服务器端的协议类型、主机／主机名＋端口、文件／CGI服务名)。一般实现方法是: 　　通过openStream()可以得到InputStream,即可读取www服务器上的资源;　　通过openConnection()可以得到URLConnection,即产生一个双向连接，以实现同服务器端的CGI程序进行</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/baidu_37107022/article/details/76890290"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"10","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/baidu_37107022/article/details/76890290"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/baidu_37107022/article/details/76890290" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"10","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/baidu_37107022/article/details/76890290"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control'>
					<em>java</em><em>网络</em><em>编程</em>面试题
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/baidu_37107022" target="_blank"><span class="blog-title">Java仗剑走天涯</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">08-08</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					1万+
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/baidu_37107022/article/details/76890290" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"10","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/baidu_37107022/article/details/76890290"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-10.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>java</em><em>网络</em><em>编程</em>面试题</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/weixin_34041003/article/details/93390587"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"11","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34041003/article/details/93390587"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/weixin_34041003/article/details/93390587" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"11","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34041003/article/details/93390587"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control'>
					<em>Java</em><em>网络</em><em>编程</em>学习笔记
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/weixin_34041003" target="_blank"><span class="blog-title">weixin_34041003的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">02-22</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					111
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/weixin_34041003/article/details/93390587" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"11","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34041003/article/details/93390587"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-11.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>Java</em><em>网络</em><em>编程</em>，我们先来看下面这一张图：





由图可得：想要进行<em>网络</em><em>编程</em>，首先是服务器端通过ServerSocket对某一个端口进行监听。通过accept来判断是否有客户端与其相连。若成功连上，则通过readline和println函数来进行数据的发送和接收。实现<em>网络</em><em>编程</em>。


示例如下：
服务器端代码：

/*
 * 功能：演示<em>Java</em><em>网络</em><em>编程</em>的服务器端
...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/a724888/article/details/74926209"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"12","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/74926209"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/a724888/article/details/74926209" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"12","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/74926209"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control'>
					<em>Java</em><em>网络</em><em>编程</em>和NIO详解3：IO模型与<em>Java</em><em>网络</em><em>编程</em>模型
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/a724888" target="_blank"><span class="blog-title">程序员书单</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">07-10</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					3795
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/a724888/article/details/74926209" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"12","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/74926209"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-12.control'>
				<div class="desc ellipsis-online ellipsis-online-1">基本概念说明

用户空间与内核空间

现在操作系统都是采用虚拟存储器，那么对32位操作系统而言，它的寻址空间（虚拟存储空间）为4G（2的32次方）。操作系统的核心是内核，独立于普通的应用程序，可以访问受保护的内存空间，也有访问底层硬件设备的所有权限。为了保证用户进程不能直接操作内核（kernel），保证内核的安全，操作系统将虚拟空间划分为两部分，一部分为内核空间，一部分为用户空间。针对linux操...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/a724888/article/details/80856584"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"13","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/80856584"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/a724888/article/details/80856584" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"13","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/80856584"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control'>
					<em>Java</em><em>网络</em><em>编程</em>与NIO学习总结
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/a724888" target="_blank"><span class="blog-title">程序员书单</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">06-29</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4866
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/a724888/article/details/80856584" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"13","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/a724888/article/details/80856584"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-13.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>Java</em><em>网络</em><em>编程</em>与NIO学习总结

这篇总结主要是基于我之前<em>Java</em><em>网络</em><em>编程</em>与NIO系列文章而形成的的。主要是把重要的知识点用自己的话说了一遍，可能会有一些错误，还望见谅和指点。谢谢



更多详细内容可以查看我的专栏文章：<em>Java</em><em>网络</em><em>编程</em>与NIO

https://blog.csdn.net/column/details/21963.html

<em>Java</em> IO

<em>Java</em> IO的基础知识已在前面...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/sky_walker85/article/details/23876469"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"14","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23876469"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/sky_walker85/article/details/23876469" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"14","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23876469"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control'>
					<em>Java</em><em>网络</em><em>编程</em>之Socket<em>编程</em>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/sky_walker85" target="_blank"><span class="blog-title">skyWalker_ONLY</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">04-16</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4113
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/sky_walker85/article/details/23876469" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"14","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23876469"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-14.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>Java</em><em>网络</em><em>编程</em>之Socket<em>编程</em>
URL和URLConnection类提供了相对高层次的访问<em>网络</em>资源的途径，但是有时程序需要低层次的<em>网络</em>通信，比如当编写客户端&mdash;服务器应用程序时。在一个客户端&mdash;服务器应用程序中，服务器提供了诸如处理数据查询或者发送当前股票价格的服务。客户端使用服务器提供的服务或者显示数据查询结果或者为投资者提供股票购买建议。发生在客户端和服务器之间的通信必须是可靠的，这样不会出</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/weixin_34032621/article/details/90686960"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"15","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34032621/article/details/90686960"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/weixin_34032621/article/details/90686960" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"15","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34032621/article/details/90686960"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control'>
					<em>JAVA</em><em>网络</em><em>编程</em>之获取<em>网络</em>资源
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/weixin_34032621" target="_blank"><span class="blog-title">weixin_34032621的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">01-05</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					180
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/weixin_34032621/article/details/90686960" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"15","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/weixin_34032621/article/details/90686960"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-15.control'>
				<div class="desc ellipsis-online ellipsis-online-1">在应用程序开发过程中，很多时候我们会用<em>网络</em>资源，比如接口调用等。<em>Java</em>中也提供了相关的类去处理<em>网络</em>资源，而我们在处理<em>网络</em>资源的时候，用到的最多的就是IO，所以对IO还不了解的可以先看看前面的博客。 
<em>Java</em>中，处理<em>网络</em>资源、<em>网络</em>通信所需要的类都在<em>java</em>.net包中。



URL

类URL代表一个统一资源定位符，它是指向互联网&ldquo;...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/peace1213/article/details/50178141"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"16","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/peace1213/article/details/50178141"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/peace1213/article/details/50178141" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"16","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/peace1213/article/details/50178141"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control'>
					<em>Java</em><em>网络</em><em>编程</em>以及简单的聊天程序
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/peace1213" target="_blank"><span class="blog-title">peace唠叨</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">12-04</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					9590
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/peace1213/article/details/50178141" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"16","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/peace1213/article/details/50178141"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-16.control'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>网络</em><em>编程</em>技术是互联网技术中的主流<em>编程</em>技术之一，懂的一些基本的操作是非常必要的。这章主要讲解<em>网络</em><em>编程</em>，UDP和Socket<em>编程</em>，以及使用Socket做一个简单的聊天软件。</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_course clearfix" data-url="https://edu.csdn.net/course/detail/9029"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-course-OPENSEARCH-17.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"17","strategy":"OPENSEARCH","dest":"https://edu.csdn.net/course/detail/9029"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://edu.csdn.net/course/detail/9029" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-course-OPENSEARCH-17.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"17","strategy":"OPENSEARCH","dest":"https://edu.csdn.net/course/detail/9029"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-course-OPENSEARCH-17.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-course-OPENSEARCH-17.control'>
					<em>Java</em><em>网络</em><em>编程</em>精讲
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">08-03</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://edu.csdn.net/course/detail/9029" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-course-OPENSEARCH-17.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"17","strategy":"OPENSEARCH","dest":"https://edu.csdn.net/course/detail/9029"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-course-OPENSEARCH-17.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-course-OPENSEARCH-17.control'>
				<div class="desc ellipsis-online ellipsis-online-1">本课程是《<em>Java</em>初级至应用》系统课程的第十一章，全套课程精细讲解，课程超过其他机构30%的课程量，经过我们全套课程系统学习的同学，可轻松从事<em>Java</em>工程师或系统架构师岗位，课程提供全套代码笔记其它相关素材及答疑服务，可谓是低投资高回报！学习前或学习后有任何疑问请在课程中提问，老师看到会第一时间回复！</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/sky_walker85/article/details/23475127"  data-report-view='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"18","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23475127"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/sky_walker85/article/details/23475127" class="tit ellipsis-online ellipsis-online-1" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"18","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23475127"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control'>
					<em>Java</em><em>网络</em><em>编程</em>之URL<em>编程</em>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/sky_walker85" target="_blank"><span class="blog-title">skyWalker_ONLY</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">04-11</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					3971
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/sky_walker85/article/details/23475127" target="_blank"  data-report-click='{"ab":"new","mod":"popu_387","extra":"{\"utm_medium\":\"distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control\"}","dist_request_id":"5445aea1-c725-4f77-a658-06c5a0ab10f4","index":"18","strategy":"OPENSEARCH","dest":"https://blog.csdn.net/sky_walker85/article/details/23475127"}'  data-report-query='utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control&dist_request_id=5445aea1-c725-4f77-a658-06c5a0ab10f4&depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-18.control'>
				<div class="desc ellipsis-online ellipsis-online-1">URL简介
URL是统一资源定位符（Uniform Resource Locator）的缩写，是对<em>网络</em>上资源（地址）的一个引用。资源可以是简单的文件或目录，也可以是对更为复杂的对象的引用，例如对数据库或搜索引擎的查询。下面是一个URL的例子：

如上图所示，URL由两个主要部分组成：协议标示符和资源名称。协议标示符和资源名称之间由冒号和两个斜线分隔，协议标示符表示用于获取资源的协议名称，比如</div>
			</a>
		</div>
	</div>
</div>
            </div>
            <div class="template-box">
                <span>©️2020 CSDN</span>
                <span>皮肤主题: 大白</span>
                <span> 设计师:CSDN官方博客</span>
                <span>
                    <a href="https://blog.csdn.net/" class="back-home c-blue c-blue-hover c-blue-focus">返回首页</a>
                </span>
            </div>
<div class="blog-footer-bottom" style="margin-top:10px;"></div>
<script src="https://g.csdnimg.cn/common/csdn-footer/csdn-footer.js" data-isfootertrack="false" type="text/javascript"></script>
<script type="text/javascript">
    window.csdn.csdnFooter.options = {
        el: '.blog-footer-bottom',
        type: 2
    }
</script>        </main>
<aside class="blog_container_aside">
    <div id="asideProfile" class="aside-box">
    <div class="profile-intro d-flex">
        <div class="avatar-box d-flex justify-content-center flex-column">
            <a href="https://blog.csdn.net/weixin_41121133" data-report-click='{"mod":"popu_379","spm":"1001.2101.3001.4121","dest":"https://blog.csdn.net/weixin_41121133","ab":"new"}'>
                <img src="https://profile.csdnimg.cn/8/0/A/3_weixin_41121133" class="avatar_pic">
            </a>
        </div>
        <div class="user-info d-flex flex-column profile-intro-name-box">
            <div class="profile-intro-name-boxTop">
                <a href="https://blog.csdn.net/weixin_41121133" class="" id="uid" title="lazydog036" data-report-click='{"mod":"popu_379","spm":"1001.2101.3001.4122","dest":"https://blog.csdn.net/weixin_41121133","ab":"new"}'>
                    <span class="name " username="weixin_41121133">lazydog036</span>
                </a>
                <span>
                </span>
                <span class="flag expert-blog">
                <span class="bubble">CSDN认证博客专家</span>
                </span>
                <span class="flag company-blog">
                <span class="bubble">CSDN认证企业博客</span>
                </span>
            </div>
            <div class="profile-intro-name-boxFooter">
                <span class="personal-home-page personal-home-years">码龄3年</span>
                    <span class="personal-home-page">
                    <a class="personal-home-certification" href="https://i.csdn.net/#/uc/profile?utm_source=14998968" target="_blank" title="安阳师范学院">
                    <img src="https://csdnimg.cn/identity/colleges.png" alt="">
                    安阳师范学院
                    </a>
                    </span>
            </div>
        </div>
    </div>
    <div class="data-info d-flex item-tiling">
        <dl class="text-center" title="16">
            <a href="https://blog.csdn.net/weixin_41121133" data-report-click='{"mod":"1598321000_001","spm":"1001.2101.3001.4310"}' data-report-query="t=1">  
                <dt><span class="count">16</span></dt>
                <dd class="font">原创</dd>
            </a>
        </dl>
        <dl class="text-center" data-report-click='{"mod":"1598321000_002","spm":"1001.2101.3001.4311"}' title="165317">
            <a href="https://blog.csdn.net/rank/writing_rank" target="_blank">
                <dt><span class="count">16万+</span></dt>
                <dd class="font">周排名</dd>
            </a>
        </dl>
        <dl class="text-center" title="428325">
            <a href="https://blog.csdn.net/rank/writing_rank_total" data-report-click='{"mod":"1598321000_003","spm":"1001.2101.3001.4312"}' target="_blank">
                <dt><span class="count">42万+</span></dt>
                <dd class="font">总排名</dd>
            </a>
        </dl>
        <dl class="text-center" style="min-width:58px" title="1658">  
            <dt><span class="count">1658</span></dt>
            <dd>访问</dd>
        </dl>
        <dl class="text-center" title="2级,点击查看等级说明">
            <dt><a href="https://blog.csdn.net/home/help.html#level" target="_blank">
                <img class="level" src="https://csdnimg.cn/identity/blog2.png">
            </a>
            </dt>
            <dd>等级</dd>
        </dl>
    </div>
    <div class="item-rank"></div>
    <div class="data-info d-flex item-tiling">
        <dl class="text-center" title="169">
            <dt><span class="count">169</span></dt>
            <dd>积分</dd>
        </dl>
         <dl class="text-center" id="fanBox" title="3">
            <dt><span class="count" id="fan">3</span></dt>
            <dd>粉丝</dd>
        </dl>
        <dl class="text-center" title="2">
            <dt><span class="count">2</span></dt>
            <dd>获赞</dd>
        </dl>
        <dl class="text-center" title="3">
            <dt><span class="count">3</span></dt>
            <dd>评论</dd>
        </dl>
        <dl class="text-center" title="7">
            <dt><span class="count">7</span></dt>
            <dd>收藏</dd>
        </dl>
    </div>
    <div class="aside-box-footer" data-report-view='{"spm":"3001.4296"}'>
        <div class="badge-box d-flex">
            <div class="badge d-flex">
                <div class="icon-badge" title="签到新秀">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qiandao20@240.png" alt="签到新秀">
                    </div>
                </div>
                <div class="icon-badge" title="持之以恒">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/chizhiyiheng@240.png" alt="持之以恒">
                    </div>
                </div>
                <div class="icon-badge" title="勤写标兵Lv2">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qixiebiaobing2@240.png" alt="勤写标兵Lv2">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="profile-intro-name-boxOpration">
        <div class="opt-letter-watch-box">
        <a class="bt-button personal-letter" href="https://im.csdn.net/chat/weixin_41121133" target="_blank" rel="noopener">私信</a>
        </div>
        <div class="opt-letter-watch-box"> 
            <a class="personal-watch bt-button" id="btnAttent" >关注</a>  
        </div>
    </div>
</div>
<div id="asideSearchArticle" class="aside-box">
	<div class="aside-content search-comter">
    <div class="aside-search aside-search-blog">         
        <input type="text" class="input-serch-blog" name="" autocomplete="off" value="" id="search-blog-words" placeholder="搜博主文章">
        <a class="btn-search-blog">
                    <img src="//csdnimg.cn/cdn/content-toolbar/csdn-sou.png?v=1587021042">
        </a>
    </div>
    </div>
</div>


<div id="asideHotArticle" class="aside-box">
	<h3 class="aside-title">热门文章</h3>
	<div class="aside-content">
		<ul class="hotArticle-list">
			<li>
				<a href="https://blog.csdn.net/weixin_41121133/article/details/110000545" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://blog.csdn.net/weixin_41121133/article/details/110000545","ab":"new"}'>
				Tomcat启动报错子容器启动失败
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">483</span>
                </a>
			</li>
			<li>
				<a href="https://blog.csdn.net/weixin_41121133/article/details/109582607" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://blog.csdn.net/weixin_41121133/article/details/109582607","ab":"new"}'>
				JAVA反射总结
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">286</span>
                </a>
			</li>
			<li>
				<a href="https://blog.csdn.net/weixin_41121133/article/details/109707050" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://blog.csdn.net/weixin_41121133/article/details/109707050","ab":"new"}'>
				快速上手MySQL
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">181</span>
                </a>
			</li>
			<li>
				<a href="https://blog.csdn.net/weixin_41121133/article/details/109628661" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://blog.csdn.net/weixin_41121133/article/details/109628661","ab":"new"}'>
				JAVA网络编程
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">110</span>
                </a>
			</li>
			<li>
				<a href="https://blog.csdn.net/weixin_41121133/article/details/109910544" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://blog.csdn.net/weixin_41121133/article/details/109910544","ab":"new"}'>
				Druid连接池的使用
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">92</span>
                </a>
			</li>
		</ul>
	</div>
</div>
<div id="asideCategory" class="aside-box flexible-box">
    <h3 class="aside-title">分类专栏</h3>
    <div class="aside-content">
        <ul>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10580067.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10580067.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">数据库</span>
                    </span>
                    <span class="count float-right">2篇</span>
                </a>
            </li>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10533897.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10533897.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756754.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">JAVA</span>
                    </span>
                    <span class="count float-right">11篇</span>
                </a>
            </li>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10606267.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10606267.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">网络</span>
                    </span>
                    <span class="count float-right">1篇</span>
                </a>
            </li>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10602633.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10602633.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">经验</span>
                    </span>
                    <span class="count float-right">1篇</span>
                </a>
            </li>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10582115.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10582115.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756780.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">配置</span>
                    </span>
                    <span class="count float-right">1篇</span>
                </a>
            </li>
            <li class="">
                <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10536224.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10536224.html","ab":"new"}'>
                    <img src="https://img-blog.csdnimg.cn/20201014180756925.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        <span class="text">IO</span>
                    </span>
                </a>
            </li>
        </ul>
    </div>
    <p class="text-center">
        <a class="flexible-btn" data-fbox="aside-archive"><img class="look-more" src="https://csdnimg.cn/release/blogv2/dist/pc/img/arrowDownWhite.png" alt=""></a>
    </p>
</div>
<div id="asideNewComments" class="aside-box">
    <h3 class="aside-title">最新评论</h3>
    <div class="aside-content">
        <ul class="newcomment-list">
            <li>
                <a class="title text-truncate" target="_blank" href="https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675949" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675949","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675949","ab":"new"}'>JAVA集合框架详解</a>
                <p class="comment ellipsis">
                    <a href="https://blog.csdn.net/weixin_43423864" class="user-name" target="_blank">一起码代码: </a>
                    <span class="code-comments">大佬，我要拜你为师！</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675451" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675451","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13675451","ab":"new"}'>JAVA集合框架详解</a>
                <p class="comment ellipsis">
                    <a href="https://blog.csdn.net/weixin_41121133" class="user-name" target="_blank">lazydog036: </a>
                    <span class="code-comments">感谢评论</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13669242" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13669242","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://blog.csdn.net/weixin_41121133/article/details/109409268#comments_13669242","ab":"new"}'>JAVA集合框架详解</a>
                <p class="comment ellipsis">
                    <a href="https://xiangbiao.blog.csdn.net" class="user-name" target="_blank">向彪-blockchain: </a>
                    <span class="code-comments">总结的不错。可以可以。很强。继续加油~</span>
                </p>
            </li>
        </ul>
    </div>
</div>
<div id="asideArchive" class="aside-box" style="display:block!important; width:300px;">
    <h3 class="aside-title">最新文章</h3>
    <div class="aside-content">
        <ul class="inf_list clearfix">
            <li class="clearfix">
            <a href="https://blog.csdn.net/weixin_41121133/article/details/113091797" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://blog.csdn.net/weixin_41121133/article/details/113091797","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://blog.csdn.net/weixin_41121133/article/details/113091797","ab":"new"}'>计算机三级数据库技术之需求分析</a>
            </li>
            <li class="clearfix">
            <a href="https://blog.csdn.net/weixin_41121133/article/details/112211411" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://blog.csdn.net/weixin_41121133/article/details/112211411","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://blog.csdn.net/weixin_41121133/article/details/112211411","ab":"new"}'>Jsp和Servlet的关系（通俗易懂）</a>
            </li>
            <li class="clearfix">
            <a href="https://blog.csdn.net/weixin_41121133/article/details/110089411" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://blog.csdn.net/weixin_41121133/article/details/110089411","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://blog.csdn.net/weixin_41121133/article/details/110089411","ab":"new"}'>HTTP协议概述</a>
            </li>
        </ul>
        <div class="archive-bar"></div>
        <div class="archive-box">
                <div class="archive-list-item"><a href="https://blog.csdn.net/weixin_41121133/article/month/2021/01" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":""}'><span class="year">2021年</span><span class="num">2篇</span></a></div>
                <div class="archive-list-item"><a href="https://blog.csdn.net/weixin_41121133/article/month/2020/11" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":""}'><span class="year">2020年</span><span class="num">14篇</span></a></div>
        </div>
    </div>
</div>
	<div id="footerRightAds" class="isShowFooterAds">
		<div class="aside-box">
			<div id="kp_box_57" data-pid="57"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- PC-博客详情页-左下视窗（300*600） -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-1076724771190722"
     data-ad-slot="1173711872"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script><img class="pre-img-lasy" data-src="https://kunyu.csdn.net/1.png?p=57&a=2488&c=0&k=&spm=1001.2101.3001.5001&d=1&t=3&u=6efbd3be3a4242cbb8edc6fd5415758c" style="display: block;width: 0px;height: 0px;"></div>
		</div>
	</div>
    <!-- 详情页显示目录 -->
<!--文章目录-->
<div id="asidedirectory" class="aside-box">
    <div class='groupfile' id="directory">
        <h3 class="aside-title">目录</h3>
        <div class="align-items-stretch group_item">
            <div class="pos-box">
            <div class="scroll-box">
                <div class="toc-box"></div>
            </div>
            </div>
        </div>
    </div>
</div>
</aside>
<script>
	$("a.flexible-btn").click(function(){
		$(this).parents('div.aside-box').removeClass('flexible-box');
		$(this).parents("p.text-center").remove();
	})
</script>
<script type="text/javascript"  src="https://g.csdnimg.cn/user-tooltip/2.4/user-tooltip.js"></script>
<script type="text/javascript"  src="https://g.csdnimg.cn/user-medal/1.0.6/user-medal.js"></script>    </div>
<div class="recommend-right  align-items-stretch clearfix" id="rightAside" data-type="recommend">
    <aside class="recommend-right_aside">
        <div id="recommend-right" >
                        <div class='flex-column aside-box groupfile' id="groupfile">
                <div class="groupfile-div">
                <h3 class="aside-title">目录</h3>
                <div class="align-items-stretch group_item">
                    <div class="pos-box">
                        <div class="scroll-box">
                            <div class="toc-box"></div>
                        </div>
                    </div>
                </div>
                </div>
            </div>
                <div id="recommendAdBox">
                    <div id="kp_box_479" data-pid="479"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- PC-博客内页右侧第一顺位 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-1076724771190722"
     data-ad-slot="1827473444"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script><img class="pre-img-lasy" data-src="https://kunyu.csdn.net/1.png?p=479&a=3266&c=0&k=&spm=1001.2101.3001.4834&d=1&t=3&u=fb2c57eca0704bb6bbdb20676c804a58" style="display: block;width: 0px;height: 0px;"></div>
                </div>
            <div class='aside-box kind_person d-flex flex-column'>
                    <h3 class="aside-title">分类专栏</h3>
                    <div class="align-items-stretch kindof_item" id="kind_person_column">
                        <div class="aside-content">
                            <ul>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10580067.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10580067.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">数据库</span>
                                        </span>
                                        <span class="count float-right">2篇</span>
                                    </a>
                                </li>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10533897.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10533897.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756754.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">JAVA</span>
                                        </span>
                                        <span class="count float-right">11篇</span>
                                    </a>
                                </li>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10606267.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10606267.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">网络</span>
                                        </span>
                                        <span class="count float-right">1篇</span>
                                    </a>
                                </li>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10602633.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10602633.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">经验</span>
                                        </span>
                                        <span class="count float-right">1篇</span>
                                    </a>
                                </li>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10582115.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10582115.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756780.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">配置</span>
                                        </span>
                                        <span class="count float-right">1篇</span>
                                    </a>
                                </li>
                                <li class="">
                                    <a class="clearfix" target="_blank" href="https://blog.csdn.net/weixin_41121133/category_10536224.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/weixin_41121133/category_10536224.html","ab":"new"}'>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756925.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="title oneline">
                                            <span class="text">IO</span>
                                        </span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
            </div>
        </div>
    </aside>
</div>

</div>
<div class="mask-dark"></div>
<script type="text/javascript">
    var timert = setInterval(function(){
      sideToolbar = $(".csdn-side-toolbar");
      if (sideToolbar.length > 0) {
        sideToolbar.css('cssText','bottom:64px !important;')
        clearInterval(timert);
      }
    }, 200);
</script>
<script>
    var articleId = 109628661;
    var commentscount = 0;
    var curentUrl = "https://blog.csdn.net/weixin_41121133/article/details/109628661";
    var myUrl = "https://my.csdn.net/";
    var highlight = ["JAVA","网络","编程"];//高亮数组
    var isRecommendModule = true;
    var isBaiduPre = false;
    var baiduCount = 2;
    var share_card_url = "https://blog.csdn.net/weixin_41121133/article/shareArticleCardPage?article_id=109628661"
	var articleType = 1;
    var baiduKey = "JAVA网络编程";
    var needInsertBaidu = true;
    var recommendRegularDomainArr = ["blog.csdn.net/.+/article/details/","download.csdn.net/download/","edu.csdn.net/course/detail/","ask.csdn.net/questions/","bbs.csdn.net/topics/","www.csdn.net/gather_.+/"]
    var codeStyle = "";
    var baiduSearchType = "title";
    var canRead = true;
    var blogMoveHomeArticle = false;
    var showPcWindowAd = false;
    var showSearchText = "control";
    var linkPage = true;
    var articleSource = 1;
    var articleReport = '{"pid": "blog", "spm":"1001.2101"}';
</script>
<script src="https://csdnimg.cn/public/sandalstrap/1.4/js/sandalstrap.min.js"></script>
<div class="skin-boxshadow"></div>
<div style="display:none;">
	<img src="" onerror='setTimeout(function(){if(!/(csdn.net|iteye.com|baiducontent.com|googleusercontent.com|360webcache.com|sogoucdn.com|bingj.com|baidu.com)$/.test(window.location.hostname)){window.location.href="\x68\x74\x74\x70\x73\x3a\x2f\x2f\x77\x77\x77\x2e\x63\x73\x64\x6e\x2e\x6e\x65\x74"}},3000);'>
</div>
</body>
<script src="https://csdnimg.cn/release/blogv2/dist/components/js/pc_wap_highlight-db1e81323a.min.js" type="text/javascript"></script>
<script src="https://csdnimg.cn/release/blogv2/dist/components/js/pc_wap_common-906586e915.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="https://csdnimg.cn/release/blog_editor_html/release1.6.12/ckeditor/plugins/codesnippet/lib/highlight/styles/atom-one-light.css">
<script>
 // 全局声明
 if (window.csdn === undefined) {
      window.csdn = {};
    }
    window.csdn.sideToolbar = {
        options: {
            report:{
                isShow: true,
            },
            qr: {
                isShow: false,
            },
            guide: {
                isShow: true
            }
        }
    }
    $(function(){
        $(document).on('click',"a.option-box[data-type='report']",function() {
            window.csdn.userLogin.loadAjax(function(res){
                showReport(false,articleTitles);
            })
        });
    })
</script>
    <script src="https://g.csdnimg.cn/baidu-search/1.0.9/baidu-search.js"  type="text/javascript"></script>
<script src="https://csdnimg.cn/release/download/old_static/js/qrcode.js"></script>
<script src="https://csdnimg.cn/release/blogv2/dist/pc/js/common-b286f966c8.min.js" type="text/javascript"></script>
<script src="https://csdnimg.cn/release/blogv2/dist/pc/js/detail-7588366af7.min.js" type="text/javascript"></script>
<script src="https://g.csdnimg.cn/user-ordercart/1.0.6/user-ordercart.js" type="text/javascript"></script>
<script src="https://csdnimg.cn/release/blogv2/dist/pc/js/column-78261cfea6.min.js" type="text/javascript"></script>
<script src="https://g.csdnimg.cn/side-toolbar/2.8/side-toolbar.js" type="text/javascript"></script>
<script src="https://g.csdnimg.cn/copyright/1.0.3/copyright.js" type="text/javascript"></script>
<script>
    $(".MathJax").remove();
    if ($('div.markdown_views pre.prettyprint code.hljs').length > 0) {
        $('div.markdown_views')[0].className = 'markdown_views';
    }
</script>
<script type="text/javascript" src="https://csdnimg.cn/release/blog_mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
            "HTML-CSS": {
                    linebreaks: { automatic: true, width: "94%container" },
                    imageFont: null
            },
            tex2jax: {
                preview: "none"
            },
            mml2jax: {
                preview: 'none'
            }
    });
</script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/user-login/2.3.2/user-login.js"></script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/login-box/1.1.4/login-box.js"></script></html>
